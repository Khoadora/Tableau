<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='World Indicators_csv (World Indicators)' inline='true' name='federated.1disy5g0hrr84816b8u291ru14fa' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='World Indicators' name='excel-direct.0t55bby1xsn4b211vhxrf0x2iqq6'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/download/World Indicators.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0t55bby1xsn4b211vhxrf0x2iqq6' name='World Indicators_csv' table='[&apos;World Indicators_csv$&apos;]' type='table'>
          <columns gridOrigin='A1:AB2705:no:A1:AB2705:0' header='yes' outcome='2'>
            <column datatype='real' name='Birth Rate' ordinal='0' />
            <column datatype='real' name='Business Tax Rate' ordinal='1' />
            <column datatype='integer' name='CO2 Emissions' ordinal='2' />
            <column datatype='string' name='Country' ordinal='3' />
            <column datatype='integer' name='Days to Start Business' ordinal='4' />
            <column datatype='real' name='Ease of Business' ordinal='5' />
            <column datatype='integer' name='Energy Usage' ordinal='6' />
            <column datatype='real' name='GDP' ordinal='7' />
            <column datatype='real' name='Health Exp % GDP' ordinal='8' />
            <column datatype='real' name='Health Exp/Capita' ordinal='9' />
            <column datatype='real' name='Hours to do Tax' ordinal='10' />
            <column datatype='real' name='Infant Mortality Rate' ordinal='11' />
            <column datatype='real' name='Internet Usage' ordinal='12' />
            <column datatype='real' name='Lending Interest' ordinal='13' />
            <column datatype='integer' name='Life Expectancy Female' ordinal='14' />
            <column datatype='integer' name='Life Expectancy Male' ordinal='15' />
            <column datatype='real' name='Mobile Phone Usage' ordinal='16' />
            <column datatype='integer' name='Number of Records' ordinal='17' />
            <column datatype='real' name='Population 0-14' ordinal='18' />
            <column datatype='real' name='Population 15-64' ordinal='19' />
            <column datatype='real' name='Population 65+' ordinal='20' />
            <column datatype='integer' name='Population Total' ordinal='21' />
            <column datatype='real' name='Population Urban' ordinal='22' />
            <column datatype='string' name='Region' ordinal='23' />
            <column datatype='real' name='Tourism Inbound' ordinal='24' />
            <column datatype='real' name='Tourism Outbound' ordinal='25' />
            <column datatype='date' name='Year' ordinal='26' />
            <column datatype='string' name='Header' ordinal='27' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0t55bby1xsn4b211vhxrf0x2iqq6' name='World Indicators_csv' table='[&apos;World Indicators_csv$&apos;]' type='table'>
          <columns gridOrigin='A1:AB2705:no:A1:AB2705:0' header='yes' outcome='2'>
            <column datatype='real' name='Birth Rate' ordinal='0' />
            <column datatype='real' name='Business Tax Rate' ordinal='1' />
            <column datatype='integer' name='CO2 Emissions' ordinal='2' />
            <column datatype='string' name='Country' ordinal='3' />
            <column datatype='integer' name='Days to Start Business' ordinal='4' />
            <column datatype='real' name='Ease of Business' ordinal='5' />
            <column datatype='integer' name='Energy Usage' ordinal='6' />
            <column datatype='real' name='GDP' ordinal='7' />
            <column datatype='real' name='Health Exp % GDP' ordinal='8' />
            <column datatype='real' name='Health Exp/Capita' ordinal='9' />
            <column datatype='real' name='Hours to do Tax' ordinal='10' />
            <column datatype='real' name='Infant Mortality Rate' ordinal='11' />
            <column datatype='real' name='Internet Usage' ordinal='12' />
            <column datatype='real' name='Lending Interest' ordinal='13' />
            <column datatype='integer' name='Life Expectancy Female' ordinal='14' />
            <column datatype='integer' name='Life Expectancy Male' ordinal='15' />
            <column datatype='real' name='Mobile Phone Usage' ordinal='16' />
            <column datatype='integer' name='Number of Records' ordinal='17' />
            <column datatype='real' name='Population 0-14' ordinal='18' />
            <column datatype='real' name='Population 15-64' ordinal='19' />
            <column datatype='real' name='Population 65+' ordinal='20' />
            <column datatype='integer' name='Population Total' ordinal='21' />
            <column datatype='real' name='Population Urban' ordinal='22' />
            <column datatype='string' name='Region' ordinal='23' />
            <column datatype='real' name='Tourism Inbound' ordinal='24' />
            <column datatype='real' name='Tourism Outbound' ordinal='25' />
            <column datatype='date' name='Year' ordinal='26' />
            <column datatype='string' name='Header' ordinal='27' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Birth Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Birth Rate]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Birth Rate</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business Tax Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Business Tax Rate]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Business Tax Rate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 Emissions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CO2 Emissions]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>CO2 Emissions</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days to Start Business</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Days to Start Business]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Days to Start Business</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ease of Business</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Ease of Business]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Ease of Business</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy Usage</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Energy Usage]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Energy Usage</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Exp % GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health Exp % GDP]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Health Exp % GDP</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Exp/Capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health Exp/Capita]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Health Exp/Capita</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hours to do Tax</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hours to do Tax]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Hours to do Tax</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infant Mortality Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infant Mortality Rate]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Infant Mortality Rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internet Usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Internet Usage]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Internet Usage</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lending Interest</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lending Interest]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Lending Interest</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy Female</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Life Expectancy Female]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Life Expectancy Female</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy Male</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Life Expectancy Male]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Life Expectancy Male</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mobile Phone Usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mobile Phone Usage]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Mobile Phone Usage</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 0-14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 0-14]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Population 0-14</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 15-64</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 15-64]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Population 15-64</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 65+</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 65+]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Population 65+</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population Total]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Population Total</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population Urban]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Population Urban</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism Inbound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tourism Inbound]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Tourism Inbound</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism Outbound</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tourism Outbound]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Tourism Outbound</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Header</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Header]</local-name>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias>Header</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[World Indicators_csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AB2705:no:A1:AB2705:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Tourism Per Capita' datatype='real' name='[Calculation_1143914324194734080]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Tourism Outbound])/SUM([Population Total])' />
      </column>
      <column datatype='string' name='[Country (clusters)]' parent-model='[AnalyticModel:{9d0e33ff-2a1f-43c2-b01a-9f1597517afa}]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Not Clustered&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Cluster 1&quot;'>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Antigua and Barbuda&quot;</value>
            <value>&quot;Aruba&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Bolivia&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Brunei Darussalam&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;China&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Costa Rica&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;Egypt, Arab Rep.&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Fiji&quot;</value>
            <value>&quot;French Polynesia&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Grenada&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Iran, Islamic Rep.&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kiribati&quot;</value>
            <value>&quot;Kyrgyz Republic&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Maldives&quot;</value>
            <value>&quot;Mauritius&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Micronesia, Fed. Sts.&quot;</value>
            <value>&quot;Moldova&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;New Caledonia&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;Oman&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Samoa&quot;</value>
            <value>&quot;Sao Tome and Principe&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Seychelles&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
            <value>&quot;St. Lucia&quot;</value>
            <value>&quot;St. Vincent and the Grenadines&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Syrian Arab Republic&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Tonga&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;Vanuatu&quot;</value>
            <value>&quot;Venezuela, RB&quot;</value>
            <value>&quot;Vietnam&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 2&quot;'>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Czech Republic&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Latvia&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Macedonia, FYR&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Russian Federation&quot;</value>
            <value>&quot;Serbia&quot;</value>
            <value>&quot;Slovak Republic&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Ukraine&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 3&quot;'>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Bahamas, The&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;Curacao&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Hong Kong SAR, China&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Korea, Rep.&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Macao SAR, China&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Puerto Rico&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;United Kingdom&quot;</value>
            <value>&quot;United States&quot;</value>
            <value>&quot;Uruguay&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Cluster 4&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Comoros&quot;</value>
            <value>&quot;Congo, Dem. Rep.&quot;</value>
            <value>&quot;Congo, Rep.&quot;</value>
            <value>&quot;Cote d&apos;Ivoire&quot;</value>
            <value>&quot;Djibouti&quot;</value>
            <value>&quot;Equatorial Guinea&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Gambia, The&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Guyana&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Lao PDR&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Papua New Guinea&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Solomon Islands&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Swaziland&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Timor-Leste&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Yemen, Rep.&quot;</value>
            <value>&quot;Zambia&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' hidden='true' name='[Header]' role='dimension' type='nominal' />
      <column datatype='real' name='[Health Exp % GDP]' role='measure' type='quantitative' />
      <column datatype='real' name='[Health Exp/Capita]' role='measure' type='quantitative' />
      <column datatype='real' name='[Infant Mortality Rate]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='integer' name='[Life Expectancy Female]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='integer' name='[Life Expectancy Male]' role='measure' type='quantitative' />
      <column datatype='real' name='[Population 0-14]' role='measure' type='quantitative' />
      <column datatype='real' name='[Population 15-64]' role='measure' type='quantitative' />
      <column datatype='real' name='[Population 65+]' role='measure' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Population Urban]' role='measure' type='quantitative' />
      <column datatype='real' name='[Tourism Inbound]' role='measure' type='quantitative' />
      <column datatype='real' name='[Tourism Outbound]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='World Indicators_csv' datatype='table' name='[__tableau_internal_object_id__].[World Indicators!csv_1B6B96C1CE6649FDABE9DD27269E767D]' role='measure' type='quantitative' />
      <column-instance column='[Life Expectancy Female]' derivation='Avg' name='[avg:Life Expectancy Female:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Life Expectancy Male]' derivation='Avg' name='[avg:Life Expectancy Male:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population 65+]' derivation='Avg' name='[avg:Population 65+:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population Urban]' derivation='Avg' name='[avg:Population Urban:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Health Exp % GDP]' derivation='Sum' name='[sum:Health Exp % GDP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Health Exp/Capita]' derivation='Sum' name='[sum:Health Exp/Capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Infant Mortality Rate]' derivation='Sum' name='[sum:Infant Mortality Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population 0-14]' derivation='Sum' name='[sum:Population 0-14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population 15-64]' derivation='Sum' name='[sum:Population 15-64:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population 65+]' derivation='Sum' name='[sum:Population 65+:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tourism Inbound]' derivation='Sum' name='[sum:Tourism Inbound:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Tourism Outbound]' derivation='Sum' name='[sum:Tourism Outbound:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1143914324194734080]' derivation='User' name='[usr:Calculation_1143914324194734080:qk]' pivot='key' type='quantitative' />
      <_.fcp.SchemaViewerObjectModel.false...folder name='Business' role='measures'>
        <folder-item name='[Business Tax Rate]' type='field' />
        <folder-item name='[Days to Start Business]' type='field' />
        <folder-item name='[Ease of Business]' type='field' />
        <folder-item name='[Hours to do Tax]' type='field' />
        <folder-item name='[Lending Interest]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Development' role='measures'>
        <folder-item name='[CO2 Emissions]' type='field' />
        <folder-item name='[Energy Usage]' type='field' />
        <folder-item name='[GDP]' type='field' />
        <folder-item name='[Internet Usage]' type='field' />
        <folder-item name='[Mobile Phone Usage]' type='field' />
        <folder-item name='[Tourism Inbound]' type='field' />
        <folder-item name='[Tourism Outbound]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Health' role='measures'>
        <folder-item name='[Health Exp % GDP]' type='field' />
        <folder-item name='[Health Exp/Capita]' type='field' />
        <folder-item name='[Infant Mortality Rate]' type='field' />
        <folder-item name='[Life Expectancy Female]' type='field' />
        <folder-item name='[Life Expectancy Male]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.false...folder name='Population' role='measures'>
        <folder-item name='[Birth Rate]' type='field' />
        <folder-item name='[Population 0-14]' type='field' />
        <folder-item name='[Population 15-64]' type='field' />
        <folder-item name='[Population 65+]' type='field' />
        <folder-item name='[Population Total]' type='field' />
        <folder-item name='[Population Urban]' type='field' />
      </_.fcp.SchemaViewerObjectModel.false...folder>
      <_.fcp.SchemaViewerObjectModel.true...folders-common>
        <folder name='Business'>
          <folder-item name='[Business Tax Rate]' type='field' />
          <folder-item name='[Days to Start Business]' type='field' />
          <folder-item name='[Ease of Business]' type='field' />
          <folder-item name='[Hours to do Tax]' type='field' />
          <folder-item name='[Lending Interest]' type='field' />
        </folder>
        <folder name='Development'>
          <folder-item name='[CO2 Emissions]' type='field' />
          <folder-item name='[Energy Usage]' type='field' />
          <folder-item name='[GDP]' type='field' />
          <folder-item name='[Internet Usage]' type='field' />
          <folder-item name='[Mobile Phone Usage]' type='field' />
          <folder-item name='[Tourism Inbound]' type='field' />
          <folder-item name='[Tourism Outbound]' type='field' />
        </folder>
        <folder name='Health'>
          <folder-item name='[Health Exp % GDP]' type='field' />
          <folder-item name='[Health Exp/Capita]' type='field' />
          <folder-item name='[Infant Mortality Rate]' type='field' />
          <folder-item name='[Life Expectancy Female]' type='field' />
          <folder-item name='[Life Expectancy Male]' type='field' />
        </folder>
        <folder name='Population'>
          <folder-item name='[Birth Rate]' type='field' />
          <folder-item name='[Population 0-14]' type='field' />
          <folder-item name='[Population 15-64]' type='field' />
          <folder-item name='[Population 65+]' type='field' />
          <folder-item name='[Population Total]' type='field' />
          <folder-item name='[Population Urban]' type='field' />
        </folder>
      </_.fcp.SchemaViewerObjectModel.true...folders-common>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0</bucket>
            </map>
            <map to='#edc948'>
              <bucket>5</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:2:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:4:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>4</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>3</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Population 0-14:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Tourism Inbound:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Health Exp/Capita:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Health Exp \% GDP:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1disy5g0hrr84816b8u291ru14fa]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Life Expectancy Female:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Population 65+:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Population 65+:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Infant Mortality Rate:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Population 15-64:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Tourism Outbound:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Life Expectancy Male:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia, Fed. Sts.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Macao SAR, China&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yemen, Rep.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Korea, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Congo, Dem. Rep.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hong Kong SAR, China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iran, Islamic Rep.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macedonia, FYR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Korea, Rep.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo, Rep.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela, RB&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt, Arab Rep.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[Country (clusters)]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Cluster 1&quot;</bucket>
            <bucket>&quot;Cluster 2&quot;</bucket>
            <bucket>&quot;Cluster 3&quot;</bucket>
            <bucket>&quot;Cluster 4&quot;</bucket>
            <bucket>&quot;Not Clustered&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{4c89fefe-65af-4310-8106-54c5438a3d8d}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Life Expectancy Female:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Life Expectancy Male:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Population 65+:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Population Urban:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[usr:Calculation_1143914324194734080:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{71e03f9c-ee40-4512-b444-873d4399384f}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Life Expectancy Female:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Life Expectancy Male:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Population 65+:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Population Urban:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[usr:Calculation_1143914324194734080:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{9d0e33ff-2a1f-43c2-b01a-9f1597517afa}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Life Expectancy Female:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Life Expectancy Male:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Population 65+:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Population Urban:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[usr:Calculation_1143914324194734080:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields>
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]' />
          </lod-fields>
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{d898a6dc-d727-4446-b069-19f27afa4caa}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Life Expectancy Female:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Life Expectancy Male:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Population 65+:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Population Urban:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[usr:Calculation_1143914324194734080:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{eaa8f852-8bcb-46f2-93c6-d7bf95849188}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Life Expectancy Female:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Life Expectancy Male:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Population 65+:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Population Urban:qk]' />
            <field name='[federated.1disy5g0hrr84816b8u291ru14fa].[usr:Calculation_1143914324194734080:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>0</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='World Indicators_csv' id='World Indicators!csv_1B6B96C1CE6649FDABE9DD27269E767D'>
            <properties context=''>
              <relation connection='excel-direct.0t55bby1xsn4b211vhxrf0x2iqq6' name='World Indicators_csv' table='[&apos;World Indicators_csv$&apos;]' type='table'>
                <columns gridOrigin='A1:AB2705:no:A1:AB2705:0' header='yes' outcome='2'>
                  <column datatype='real' name='Birth Rate' ordinal='0' />
                  <column datatype='real' name='Business Tax Rate' ordinal='1' />
                  <column datatype='integer' name='CO2 Emissions' ordinal='2' />
                  <column datatype='string' name='Country' ordinal='3' />
                  <column datatype='integer' name='Days to Start Business' ordinal='4' />
                  <column datatype='real' name='Ease of Business' ordinal='5' />
                  <column datatype='integer' name='Energy Usage' ordinal='6' />
                  <column datatype='real' name='GDP' ordinal='7' />
                  <column datatype='real' name='Health Exp % GDP' ordinal='8' />
                  <column datatype='real' name='Health Exp/Capita' ordinal='9' />
                  <column datatype='real' name='Hours to do Tax' ordinal='10' />
                  <column datatype='real' name='Infant Mortality Rate' ordinal='11' />
                  <column datatype='real' name='Internet Usage' ordinal='12' />
                  <column datatype='real' name='Lending Interest' ordinal='13' />
                  <column datatype='integer' name='Life Expectancy Female' ordinal='14' />
                  <column datatype='integer' name='Life Expectancy Male' ordinal='15' />
                  <column datatype='real' name='Mobile Phone Usage' ordinal='16' />
                  <column datatype='integer' name='Number of Records' ordinal='17' />
                  <column datatype='real' name='Population 0-14' ordinal='18' />
                  <column datatype='real' name='Population 15-64' ordinal='19' />
                  <column datatype='real' name='Population 65+' ordinal='20' />
                  <column datatype='integer' name='Population Total' ordinal='21' />
                  <column datatype='real' name='Population Urban' ordinal='22' />
                  <column datatype='string' name='Region' ordinal='23' />
                  <column datatype='real' name='Tourism Inbound' ordinal='24' />
                  <column datatype='real' name='Tourism Outbound' ordinal='25' />
                  <column datatype='date' name='Year' ordinal='26' />
                  <column datatype='string' name='Header' ordinal='27' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1disy5g0hrr84816b8u291ru14fa'>
      <datasources>
        <datasource caption='World Indicators_csv (World Indicators)' name='federated.1disy5g0hrr84816b8u291ru14fa' />
      </datasources>
      <datasource-dependencies datasource='federated.1disy5g0hrr84816b8u291ru14fa'>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lao PDR&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
        </groupfilter>
        <target field='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1disy5g0hrr84816b8u291ru14fa].[yr:Year:ok]'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[yr:Year:ok]' member='2010' />
          <groupfilter function='member' level='[yr:Year:ok]' member='2011' />
          <groupfilter function='member' level='[yr:Year:ok]' member='2012' />
        </groupfilter>
        <target field='[federated.1disy5g0hrr84816b8u291ru14fa].[yr:Year:ok]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_8C43C808296843DF938B522A755E3990]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Kmean Cluster' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Clusters (3)' />
        <param name='target' value='Kmean Cluster' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='GDP by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Indicators_csv (World Indicators)' name='federated.1disy5g0hrr84816b8u291ru14fa' />
          </datasources>
          <datasource-dependencies datasource='federated.1disy5g0hrr84816b8u291ru14fa'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <natural-sort column='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]' direction='DESC' />
          <filter class='quantitative' column='[federated.1disy5g0hrr84816b8u291ru14fa].[sum:GDP:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1disy5g0hrr84816b8u291ru14fa].[sum:GDP:qk]</column>
            <column>[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]</column>
            <column>[federated.1disy5g0hrr84816b8u291ru14fa].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1disy5g0hrr84816b8u291ru14fa].[sum:GDP:qk]' />
              <color column='[federated.1disy5g0hrr84816b8u291ru14fa].[sum:GDP:qk]' />
              <text column='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{850A3EA3-F19C-4161-B74C-E5747FEC38F3}' />
    </worksheet>
    <worksheet name='Kmean Cluster'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Indicators_csv (World Indicators)' name='federated.1disy5g0hrr84816b8u291ru14fa' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1disy5g0hrr84816b8u291ru14fa'>
            <column auto-hidden='true' caption='Clusters (3)' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:4]' parent-model='[AnalyticModel:{d898a6dc-d727-4446-b069-19f27afa4caa}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column caption='Tourism Per Capita' datatype='real' name='[Calculation_1143914324194734080]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Tourism Outbound])/SUM([Population Total])' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Avg' datatype='integer' name='[Life Expectancy Female]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='integer' name='[Life Expectancy Male]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population 65+]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population Total]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Population Urban]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tourism Outbound]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Life Expectancy Female]' derivation='Avg' name='[avg:Life Expectancy Female:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Life Expectancy Male]' derivation='Avg' name='[avg:Life Expectancy Male:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population 65+]' derivation='Avg' name='[avg:Population 65+:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population Urban]' derivation='Avg' name='[avg:Population Urban:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AdhocCluster:4]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:4:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1143914324194734080]' derivation='User' name='[usr:Calculation_1143914324194734080:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:4:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>0</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <slices>
            <column>[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]</column>
            <column>[federated.1disy5g0hrr84816b8u291ru14fa].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1disy5g0hrr84816b8u291ru14fa].[none:AdhocCluster:4:ok]' value='Clusters&#10;'>
              <formatted-text>
                <run>Clusters&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]' />
              <lod column='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Life Expectancy Female:qk]' />
              <lod column='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Life Expectancy Male:qk]' />
              <lod column='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Population 65+:qk]' />
              <lod column='[federated.1disy5g0hrr84816b8u291ru14fa].[avg:Population Urban:qk]' />
              <lod column='[federated.1disy5g0hrr84816b8u291ru14fa].[usr:Calculation_1143914324194734080:qk]' />
              <geometry column='[federated.1disy5g0hrr84816b8u291ru14fa].[Geometry (generated)]' />
              <color column='[federated.1disy5g0hrr84816b8u291ru14fa].[none:AdhocCluster:4:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1disy5g0hrr84816b8u291ru14fa].[Latitude (generated)]</rows>
        <cols>[federated.1disy5g0hrr84816b8u291ru14fa].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C782AE4C-CB3D-477E-BBA0-380C613DD006}' />
    </worksheet>
    <worksheet name='Population by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Indicators_csv (World Indicators)' name='federated.1disy5g0hrr84816b8u291ru14fa' />
          </datasources>
          <datasource-dependencies datasource='federated.1disy5g0hrr84816b8u291ru14fa'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Population 0-14]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population 15-64]' role='measure' type='quantitative' />
            <column datatype='real' name='[Population 65+]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population 0-14]' derivation='Sum' name='[sum:Population 0-14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population 15-64]' derivation='Sum' name='[sum:Population 15-64:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population 65+]' derivation='Sum' name='[sum:Population 65+:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1disy5g0hrr84816b8u291ru14fa].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Population 0-14:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Population 15-64:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Population 65+:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Population 0-14:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]</column>
            <column>[federated.1disy5g0hrr84816b8u291ru14fa].[yr:Year:ok]</column>
            <column>[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Population 0-14:qk]</column>
            <column>[federated.1disy5g0hrr84816b8u291ru14fa].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1disy5g0hrr84816b8u291ru14fa].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1disy5g0hrr84816b8u291ru14fa].[Multiple Values]</rows>
        <cols>([federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk] / [federated.1disy5g0hrr84816b8u291ru14fa].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{968BFE2F-7E06-4734-AD18-1D23DB49FA21}' />
    </worksheet>
    <worksheet name='Tourism revenue by country'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Indicators_csv (World Indicators)' name='federated.1disy5g0hrr84816b8u291ru14fa' />
          </datasources>
          <datasource-dependencies datasource='federated.1disy5g0hrr84816b8u291ru14fa'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Tourism Inbound]' role='measure' type='quantitative' />
            <column datatype='real' name='[Tourism Outbound]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Tourism Inbound]' derivation='Sum' name='[sum:Tourism Inbound:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tourism Outbound]' derivation='Sum' name='[sum:Tourism Outbound:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Tourism Outbound:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]</column>
            <column>[federated.1disy5g0hrr84816b8u291ru14fa].[yr:Year:ok]</column>
            <column>[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Tourism Outbound:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]' />
              <wedge-size column='[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Tourism Inbound:qk]' />
              <size column='[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Tourism Outbound:qk]' />
              <text column='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{893F9412-A973-4793-9F44-0D8685E53D56}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='22'>Global GDP, Population, and Tourism Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1500' minheight='800' minwidth='1500' sizing-mode='fixed' />
      <datasources>
        <datasource caption='World Indicators_csv (World Indicators)' name='federated.1disy5g0hrr84816b8u291ru14fa' />
      </datasources>
      <datasource-dependencies datasource='federated.1disy5g0hrr84816b8u291ru14fa'>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
        <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='24' param='vert' type-v2='layout-flow' w='98934' x='533' y='1000'>
            <zone h='7375' id='25' type-v2='title' w='98934' x='533' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90625' id='22' param='vert' type-v2='layout-flow' w='98934' x='533' y='8375'>
              <zone h='90625' id='20' type-v2='layout-basic' w='98934' x='533' y='8375'>
                <zone h='90625' id='7' param='horz' type-v2='layout-flow' w='32800' x='66667' y='8375'>
                  <zone h='90625' id='5' type-v2='layout-basic' w='32800' x='66667' y='8375'>
                    <zone h='45312' id='9' name='GDP by Country' w='32800' x='66667' y='8375'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='45313' id='13' name='Tourism revenue by country' w='32800' x='66667' y='53687'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone h='10632' id='10' mode='checkdropdown' name='GDP by Country' param='[federated.1disy5g0hrr84816b8u291ru14fa].[yr:Year:ok]' type-v2='filter' w='28934' x='533' y='8375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='79993' id='17' name='Population by Country' w='28934' x='533' y='19007'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='76872' id='3' name='Kmean Cluster' w='37200' x='29467' y='22128'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6876' id='12' name='GDP by Country' pane-specification-id='0' param='[federated.1disy5g0hrr84816b8u291ru14fa].[sum:GDP:qk]' type-v2='color' w='19666' x='29467' y='15252'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6877' id='18' mode='checkdropdown' name='Population by Country' param='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]' type-v2='filter' w='19666' x='29467' y='8375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone fixed-size='160' h='13753' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='17534' x='49133' y='8375'>
                  <zone h='6375' id='16' name='Tourism revenue by country' pane-specification-id='0' param='[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Tourism Outbound:qk]' type-v2='size' w='17534' x='49133' y='8375'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='7378' id='19' name='Population by Country' pane-specification-id='0' param='[federated.1disy5g0hrr84816b8u291ru14fa].[:Measure Names]' type-v2='color' w='17534' x='49133' y='14750'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='109' h='15875' id='8' is-fixed='true' name='Kmean Cluster' pane-specification-id='0' param='[federated.1disy5g0hrr84816b8u291ru14fa].[none:AdhocCluster:4:ok]' type-v2='color' w='9333' x='56067' y='73375' />
        <zone h='8000' id='15' name='Tourism revenue by country' pane-specification-id='0' param='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]' type-v2='color' w='9333' x='66467' y='89750' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#4e79a7' fontsize='22'>Global GDP, Population, and Tourism Analysis</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='30' param='vert' type-v2='layout-flow' w='98934' x='533' y='1000'>
                <zone h='7375' id='25' type-v2='title' w='98934' x='533' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10632' id='10' mode='checkdropdown' name='GDP by Country' param='[federated.1disy5g0hrr84816b8u291ru14fa].[yr:Year:ok]' type-v2='filter' w='28934' x='533' y='8375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45312' id='9' is-fixed='true' name='GDP by Country' w='32800' x='66667' y='8375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6876' id='12' name='GDP by Country' pane-specification-id='0' param='[federated.1disy5g0hrr84816b8u291ru14fa].[sum:GDP:qk]' type-v2='color' w='19666' x='29467' y='15252'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6877' id='18' mode='checkdropdown' name='Population by Country' param='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]' type-v2='filter' w='19666' x='29467' y='8375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='79993' id='17' is-fixed='true' name='Population by Country' w='28934' x='533' y='19007'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7378' id='19' name='Population by Country' pane-specification-id='0' param='[federated.1disy5g0hrr84816b8u291ru14fa].[:Measure Names]' type-v2='color' w='17534' x='49133' y='14750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76872' id='3' is-fixed='true' name='Kmean Cluster' w='37200' x='29467' y='22128'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='109' h='15875' id='8' name='Kmean Cluster' pane-specification-id='0' param='[federated.1disy5g0hrr84816b8u291ru14fa].[none:AdhocCluster:4:ok]' type-v2='color' w='9333' x='56067' y='73375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45313' id='13' is-fixed='true' name='Tourism revenue by country' w='32800' x='66667' y='53687'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6375' id='16' name='Tourism revenue by country' pane-specification-id='0' param='[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Tourism Outbound:qk]' type-v2='size' w='17534' x='49133' y='8375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8000' id='15' name='Tourism revenue by country' pane-specification-id='0' param='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]' type-v2='color' w='9333' x='66467' y='89750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0B3113FD-ABA0-4F9C-BAC3-3C3D1FAB8584}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Kmean Cluster'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1disy5g0hrr84816b8u291ru14fa].[none:AdhocCluster:4:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1disy5g0hrr84816b8u291ru14fa].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1disy5g0hrr84816b8u291ru14fa].[none:AdhocCluster:2:ok]</field>
            <field>[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8182126A-427E-46E5-BC50-324D70569163}' />
    </window>
    <window class='worksheet' name='GDP by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1disy5g0hrr84816b8u291ru14fa].[yr:Year:ok]' type='filter' />
            <card param='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1disy5g0hrr84816b8u291ru14fa].[sum:GDP:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]</field>
            <field>[federated.1disy5g0hrr84816b8u291ru14fa].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCA7FC75-10B5-4085-B518-F7881F6F705B}' />
    </window>
    <window class='worksheet' name='Population by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1disy5g0hrr84816b8u291ru14fa].[yr:Year:ok]' type='filter' />
            <card param='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]' type='highlighter' />
            <card pane-specification-id='0' param='[federated.1disy5g0hrr84816b8u291ru14fa].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1disy5g0hrr84816b8u291ru14fa].[:Measure Names]</field>
            <field>[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]</field>
            <field>[federated.1disy5g0hrr84816b8u291ru14fa].[none:Population 65+:qk]</field>
            <field>[federated.1disy5g0hrr84816b8u291ru14fa].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{53BB084C-09BE-4ED5-9BFA-70DC9B12342C}' />
    </window>
    <window class='worksheet' name='Tourism revenue by country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1disy5g0hrr84816b8u291ru14fa].[sum:Tourism Outbound:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]</field>
            <field>[federated.1disy5g0hrr84816b8u291ru14fa].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17EB7240-F2EC-49C1-8A9C-098BD47266E8}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='GDP by Country'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Kmean Cluster'>
          <zoom type='entire-view' />
          <highlight field='[federated.1disy5g0hrr84816b8u291ru14fa].[none:AdhocCluster:4:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Population by Country'>
          <zoom type='entire-view' />
          <highlight field='[federated.1disy5g0hrr84816b8u291ru14fa].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Tourism revenue by country'>
          <zoom type='entire-view' />
          <highlight field='[federated.1disy5g0hrr84816b8u291ru14fa].[none:Country:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='18' />
      <simple-id uuid='{D7C8357F-313C-4B43-97B9-758CD50AC567}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9d5Rk2V3n+XkvXniXEeltuawsb7qrq71vGdTdCIYBJDFCy8LCMHsYZnYw
      s4vYMzBnObOzYpcd5sywGq0WAQIJkHDqVouWutW22laXd5mV3rvw9tn9I/K9euHSVFWWje85
      eSLy3XfvuxHx+93781cwDMOggQbuUog3ewINNHAz0WCABu5qNBiggbsaDQZo4K5GgwEauKsh
      3ewJ3C2Ymlni/cF5dMHBwYEuBjpDnDkzxPdGi/zGp/fX7HP8owt8GJf458/sXHP8l175kIS/
      jc892Fd2fWZumfcuzaEisr+/kz3dTczPL/Pq2VkAWqIhHt3fg9dZWgtffvscywUDURTZv7OL
      fT1NNZ83M7vI6+fnAQiH/Dx+sI+A27Hu76Mejn90gbfn4Vc/tadmeyFfYCalsL09CMDZ86N8
      tKjxhSf6r+p5jR3gBuDt987xBy+cpbM9yrb2AO+dn74hz/3go4t86W9P0d4aYUdHkHfPzwCw
      sBDj3GyW/dtaySVi/MaXf0iyqAPw8rFL9Pa2MdAZ4k/+5m2OjSRqjj07u8TgYp7921pR0wl+
      +8/e5UbY0xdnF/jqq5es/3t72nh8b8dVj9fYATYZhlrkj18d5n//18/R4i2tkEd2V98XjyX4
      s++fYymr8vjRAT52oBMoEdqX/nwWzeHiv3v2XjpDLr7/1lnevrSA6HTxY0/t51BvjVVaV/jj
      ly/y27/yPF2B0s98764rzeGQnwPb2zmwvZ1i5hjfPTG1snsI7NraRqsLsvE4Z0YXeXh77V0g
      Eg6sjNHGPx77O9IG5BeW+fNXzpOUDT7x8B4eGWjlxOnLnJjNs7gQQ/T4+LlnD9PqN/g/v3mK
      X/vsUUDj97/5Ib/+2QfKxj9+ZpiXjk8i6wJPPbiLp7YF+U8vnmUmpfDFr6T49DP30EqW92cV
      trYGWFqM8/VXzhHPazz94G6e2NNe2iFmcmQSKeazKl947gg7WnzWMxo7wCYjG08iNTXR4nVw
      aXCcL37lVX73mx9U3GXwh988xkMP7uOLP/MAb799ktOzWQBcHi//6rOP8sS2IF9+6SwA27d2
      8ls/9yS//PF+/tsLp2s+V06nyfvCdAUkRkam+OJXXuWLX3+v5r27trQwNlu+0stFmQ+H5ulp
      Da3+AQ2DkZEp5EAIv6HypW+8y6eevoff/Kn7+Ifvvc9YQiaezJDWHPybn3mcI+1Ovvr9i4DO
      4GTc+vyDk8tVQ7e2RPifPvcY//an7+Ob3zlOwevnXz23n23bu/m9X3yaB7ZHyGbzTC5nwdD5
      v75xjKcfO8j//Jn7efmV41xaKpBKZZlKFPn880d5akeI7300WfaMxg6wyXC5neRyMjqwa2AL
      vzfQzj//0hvlNyl5potujm4prbSP7OngwmSMfgmaI35cDpEH9nXz/35wEnSVV945z9ByEZdo
      kCvWlrsllxMlV0QzYPv2Hn5vewe/9KWXa96bKygEvK6V/zS+9LVX8UgODu/dwacOtNf9bMdP
      X+aLU7M0R4L81ucfQkunyPvC7OkIAHB/fzOXphM4gbZoAKdD4KH9Pfztty/VHdOOk+dGeWMw
      htvpIJlVkFe7OZ9hSfRzsLvEsA/vauXiZJxWoKs9QsgjEfS50NJ6WbfGDrDJcIWa2OUr8vK5
      hfo3SW4Cep75rAoYjMzE6YgEym4ZmlymszlAbH6Jy3k3X/rlj/G/fu5o3RVM9AY43GrwwsnZ
      VeenFIu8+P4YD+/vXrni4Dd+7mn+/c8/wU88uA1RAAydC2NL6BV9jxzs5/d+8Wn+zU8eZVuL
      D6fPh55OkZJ1MHRGZhK0R/xlfS5NLNMeLX02XTcwAF3T0SoVCC3Pi6di/Md/8XH+/X//OK3e
      Eqm6JAeqWjkTwOPFXcgSK2hgGAzPJmiP+qvvW8HMfJx4TmnsAJsPgV/53KP8l7/9kB+8YeCS
      YPuOtopbHPzSjx7gS197BYco0NnTySP9EU6dmGd6apbf/m8TZFWDX/3MIzSFRHy5U/zWV19j
      W5t/FcVT4Jd/6lH+699+yK+9exaPQ6R3y5XV/Mz5Ub44P4+s6jz16GGO9ATrjjQzMcMfvjTC
      f/kXj6/+SZ0efvFjA/zuV76PKMDOgW0c6vLzw2F4+4OLnD09SNFw8K8/8zDgZF+byK//P6/S
      1xagUPlBHB6OdDn5zS+/wpb2JlZ0dFo7W/HnzvKbX36Fn/7kEdzm/aKTX/rUHn7vqz/AIQhs
      2dbD/VtCvFuL/w2N3//6m/yPP/cJhEYwXANr4RsvvMfhowfY0+5b++YaePXNk8w7o1Um2puF
      8eEJfjCp8AtP7mjsAA2sjScf2ktn89URP5SsRYbkuY4zujYEoxE+v7UkhjV2gAbuajSU4Abu
      ajQYoIG7Gg0GaOCuRhkDvPXWWwydOc5yTlmz47kT7zMyNcfFE++xmEzy/vGzmzbJBmrDULK8
      8oNXGZuar3vP4sQg8cINnNQtiOTyHC+//DJjU3NVbWVWoO4mJ++Ppdiy+DJf+/A0H/vRn+SN
      F/+a3QcOM7as889++nlefeFb5A03xeQ8j36sj10HDvJH//Ur/MwXPsvvf+n32bL7MN7CDEmx
      GSM1wT2PPMu+gS037MPeTZg89wFtex6gL1rgr//mBfwBH4ZSonalkKGQLhJtEXB0SSyceYX2
      lgiejgHyeZ1nHj18k2d/4xBu7kBRPqKn2cX3f/Aq0dZOlHwp9KNsB9jWv4WgN4QhSDz0xMeJ
      jQ9y4NBeUpk89z70KD4bu0TaOtna04EgednSv4OQS6CjZzv3HegllnMRcAlE2/oaxL+JaN82
      wNDxt6wdwACyqWWWEhmcngC9rc10btkKmka4pYunn/unnHnr+xy9/9BNnffNQnZpCnfrNmYn
      R1laXmJmdq5hBr2boObTvHd6iEceuPdmT+WGY3l5mebmZkaHLtDS08/y9AiSP9JggAbuDszO
      zuJ0Oquul1uBCnFOD05iqFk+OnUlYm9udpZ0JgNAKpm8Mujc6oFW8Zk57nL9a9Nx7swZVAMG
      T31ERjWvqszNLpLOZJCzSfLqlfvX+s3mZqoVxTsBExMTLC8vV/2Vh0IUElyaWCaoJ8nLMpcv
      XQbRIJPJsHDqOFsGDuLQioxevkBKdhDwSjh0hfHxSfoPP8jy9CguAdwBH0MXx2j1+zDSGXp2
      9TF7bpBYtkC0pYnZsRn2HbmP5vDVu9cbKEFXEgyNzjEzeI6cEKL/YB9zQ6PE5uNcnh7nkcMH
      EbzLjM/F6WzvIh2fZWF6AsEXZW9fmMmUBy27QDGbQPS1UEwlyKQzIBq4HAaTcwlaIl5kwcuB
      3VeXdngrQFXVmter/AAdISejSR2/JJBKp5ifKylYLW2dbN/aSyaTweUN4neJ6MDlC+eRDdBU
      DZeWZzSWZX5qisXxi8SLUMymyWRSzE5cZngmjq5BMOxlfn6V8OAG1g2Hr5XU+HGC7dspZkrf
      dSyZw+UP0d/fj0vLk8sV2L57D6lEHChy/twwuq4j+duYPvMKDp+Pyek4g4NDANbvfv78OdB0
      3P4AS4t35u9VrgOoebK6k2I2g0tykEksUxA8tIT9eN0ORmeW6Whu4syJ9+nZeYimoBu/28nZ
      iyPs3bcHSVBZWs7idijML6dpa23D65cYujxOb3cPS7MThDv6WJwcpXfnHnyua0+ivtuRzeUo
      FgsEXE4Mp5PhkXF6u7sQEEnG5vAGm1Hj05yNGzx27z4KuQyZ+BKGO0xXW5SlpSVaWpoZuniR
      5o5uXA6RTGKJguCho8nDyPQyPa1BFtMKO7Z0rz2hWxQffvghwWB1yHdDCW7grkA6ncbhqF5w
      GwzQwF2NRixQA3c1GgzQwF2NBgM0cMdDjo3z9X94lcTkIN944QdlbY2UyNscc1OjZDU3IafK
      XLLI/j07uXjmBIGWXno7W2729G4J6HKW+fk4g3NBJDnB1/7oD8i5O3hgV2tjB7idkZy+wPnZ
      Im3RIB+cOMPWNg/ff/19RiZm+ei9t2729G4p7N0aYXihgAAEIq08/vD9jE/NN3aA2xn5VBy/
      v4dvfvsf6G5tItDUipy7xNLMBAfuX72Eyd0ET8dePtWxt+r6/t07GmbQ2xqGxvH330dzBQhJ
      GolsgX2H7mN2cpSBgbUrSt9NODNyxZPdFvFbBbsaDNDAXYEf+61vWu8/+8x+PvfMfr7zN3/Z
      EIEa2DgujF1kNp9F0Q0UzUC1vaqagbLyWrquW+2KrpdeNR1NN9A0HV3T0TUDXdNB00HTQNMx
      dB1j5Zr91dBL9/z6zzxD//bt1/Q54rGlBgPc7tAKGU6cvUBb9zY6QyIXp1Ic2LWV2ckRJmYT
      7B7YwtDlYXq37WRmdJhgSyf9W7sBgxMnTnHPPYc5c+IEA3t2cmZlnL7OFgytyMlzl2kOSExP
      z9I3sI/ZyVF6t+9FARS/n4KqU1ANiqpOQdUpqgZFQ6eor7xqOkVVo6jqK/dAQSm9yqqBquho
      ioaq6uiKCoqGoaqgahiKhqGoGNb7Upuhll4z+SKZxCIXhkbZtnM/k0PnOXDPPj449h5iuJ0H
      DtU+YMOOrp7eBgPc7hCcXnbv2MrITJzl2TSGUDLsLS4tIWfiFJ0H2dbTyWI8wZ49A5wZGge6
      GblwhkReJbEwycTUEjsOHrTG6ets4dyZcyi6Qd/2I8RTedpboniMAovxZbhFYhi9wShbu3PE
      Y3NoioEqednWEobt1cT/v/0PT1vv21bk/4/9yKcbZtDbHUpmmQvTcfb3t5PK5BkcngAgm1fo
      725hbHSUxRzs3trOR2eHue/wAQBiyRTzE8NcnlygmI0xNTbMhek4B/ftBFRSqTSjQ5fJ5xII
      rjDJhenSODtunRzv5dkJ4oqTndu34/NWZ3vZcWB7m/Vnr1hdtgOk44sMjkzgDUbYM7AdYQOT
      mRgcom1gJ/UqQKbji+CJEPSuvekMDg0ysHNg1XsSS7OMzcbZt3cPTsdGZnpnwRCdiMU0U8sR
      nnj8EdLpDENDQxw6sIexmTi7OgNcHpti1ivhlnSGxyYxlCL3Pfgou/ZlCAYD7BnYhYBCenCE
      iclJigo8/PgTZDJp0GDvnm1kY/NkZ6aYW17jwIwbCKfbTXpilnmPSF7XGB+ZYNuWfnCt3ddE
      mRXo+CvfInrkJ4kUx3nn7DSfeubhdQ/09ovfZd9zz1J+mE6C7754jmefe2RDDPDid1/kuWef
      q9s+PXia0YzEA/u2kM4bRJsCde+tGvvF7/Lcc8+u+/4GqpHOpimqCgZgGKUa/xis/A8Gxspr
      rf9L71l5z8o9VwawvbdeV+61Xetui+LzXXtGYU1qDLd0oBYu8sGx19AcPhaXEjz73ON87ctf
      58DhvSQLAv2BHLHoEY50Fvju29OEV/qODl1gOZFmMVXg0M4mRkeHuHC5G09ymHz3I2RPvFU2
      5h9/+evce98h5mI5nv34EwAsTI/zwXvvEs/ruLKz7Hni0yhj7zPr2cnR/jaOXxzj05/+NABR
      N7zyvRcINreRyqnsbzUYZgeP7PXw3RfPYWhzdPVuY+zSBR78+POMjY5y/Phx9u7q5k/+9EUI
      BOn0GnzyJz7D2Te+S8c9z9DT5K71tTSwgqA/SP3TBG4vVOkA504d5/0PTvLUM8+wGM/y4AP3
      MxA1GIupdPRu4/4HHkbOxGuNBcDy8hIIIvNzM3T19bFt20729G+12ivH7Ozdxr1HjoKcse5p
      697C0QceRMkmeOyZpzn2+pucGotzpL90sES56yJFUQtz/9H7a89L8nDPPfeyq7eJgiPM1m3b
      OHLkCF4JPJEufvkLP80zj9/D6++cZi6rN4j/LkMVA+w7dIQHHnyAgEfCgUoqV2R0MU9nWKJY
      LJJLLaOJLvx+P7lclqmJibKjcyZnltjdv3VlW/Oiamk0TbPaK8esBblYpJCOoYsuHJ4ILmUR
      XEFrsvfu6uON4+dRilliCZCLS8hyAUUDr99PPpdlZmKCWmnQDjQKsoJmQFtbiaEC7QNkRt/C
      27z1qr7EBm5jGDakYgtGTrnyv64pxtlTJ41YKmcYRt74s6/9qXHq7EVD0w3DMHRj8NxpY2F5
      yViKpYzE0pKhGIaxPD9tXLw8ZiwtLRmGYRgLMxPG5fFpI5eKGZmiVjGmZiwtxQzDMKz7DcMw
      pkaHjJNnLqw8xzA+/OFLxmSiYJ+qEVuYMU6ePmfIqm4Uc2njxMlTRkHWDMMwjMsXzhhzy8vG
      0lLCGjeTWDJyimEohaxx4uRpQ1GKxlIsZY33/Rf+3sgqutHA3YUNhEKoDA5NMLDz2rxvG0U2
      uczlqSUO7du19s1XifjiDHOJInt2btu0Z9zOMKuq3YnYgB9AuuHED+APN28q8QNEWrtuW+L/
      1t98CzD462/8BbJ+fcK6YtMjvPzqG3z4wQfE0gXefe/dNXpkePedM9fl2TcaDU/wHYAz777G
      wcc+CYkJ/ubdUVrcRfA1I+SX2XroMYoLl1lOFxCcPo7s3crxU+fJp5Pse/BJzrzzCuFoG/Ox
      FJ/62JMAvP3ROZ7/0R8t9wPJMd44Ps3jDx3gnXffpaclyMRSlnBTM1FfluPHPyLcGqTVa3Bx
      cgFFMXjysXt585U3uDw8w8/80hfq+ohuJq6rJ7hYLF7P4RqoA/v3HF+Y5fjQPAM9zehylnD7
      Fu7f14viaubo3l4Gx+Y59s67SA4HH7z/HqJDwtB1XHqaUxenyRV17r33XnQ5a42paVq1E1SX
      WYylAIgtx1hYWADRSf+OrWXWvtffOobXKbFw6TgTKYXjJ8/z+V/42VuS+OE6M4Asr3qW902D
      phQ4d/4CatVpzLcn7N9zpK2Tf/KJB/jOy/UzwIKRVo4cOcIv/fwXOPnmq3Tuu28lpKH299Hi
      dzKXzAOg6ys2PtGBwzAwDA1F1Th49FHuP7iLv//bvwOcIJQOVfF4/Bw4fC8//fO/RLffwcCe
      fbhuYU+943d+53d+53oNJssybvetZ0f/wT++xN5D95CLzfPRqfMIukpe1ZmamGBoaJB4Ms3f
      ffuviIRCnBkcJpFIoRVSSL4wTsetFy5V+T33bh1AUlK4Qi14vH4iQS+iy2e97upt5tT5S8RT
      OfYf2MP5UydRDJG2ji4iQa+l4Jqvfdt3cPnsCaamZ/FFWvG4HDS39ZJPTjO/mKS5rR1RzXFp
      eJyuvm20tbRTzC6RyGscObCLD46fYH4hRltnJw5RpLk5clO+p/XguibEpNPpmuXnbjZefOEF
      PvX88/zwpe9y8J6dfO+FYxx87CHGLlwg0NZLITEDhsihLVHG6ERaHmIuB5/+kWcQhVtv9bpV
      v+fbEXcFA8TmJhmcWGBLVyvDY1Ps7N/K8OgEoVAYX6gJNZ/GkHNILg/+tj68uSmOXU7zqceP
      3Oyp18St+j3fjrgtGKBYLG6aaFVr7LmZKZrbu65J/NnMOTcY4PrhhphBDcNgemKMpuZWXN4A
      LtEgk8sT8K8vmq+SmAxdoyCreD3VBKZrKqOjI7R09JJLLCB6QrSEvYyMTtDZu5WAtzxW1i5P
      y/kMoxPTuP0hNEXG6bhiu8hnsyCKuNweHGK1WFQoFPB4rtxfOed8LofH5yOfy6EbBgG/v2qM
      jUJV1bIwkwY2jhvCAJMjlwi1b0FLTXFiWGdHXwfoKnPTEzg8QfxOg3TRYMfW3nWNp8l5ZheS
      9LVHuDwyQWdPD3NTEzR39hJ26YjuIDOTYzgkkYCmMJWV8IVbmRwfZc/u+k41p8ePTxJo6ezg
      won3CbV00eR1EMsotIQDZHJx/MEW5ufm6OxoZ3Z+lpa2HjKxWZI5jcMHq0tvmEgszhFo72Ju
      eo5INEwqtojqcDF66SL79+9ldjFBS2s7xfQSTn8EORMjV1QRnR529W+nlipSKBTI5XKrflfm
      Bi+sDGDf8Ffb/A3DKOsr2CZgtq11XRAE65p9LFEU0XV91WtrQRAEJElCkiQ0TVu3BbJyzjfE
      xFFQDIJ+Ly6Xk63b+8mk4izHYkhuP4Kuks1kmJqe3vi42QyqWuDi+dOEO7cTWywd/zMzOUaw
      qQUQCAUDKLLMxdMf4fKvbo248sUIRFrbcQgamUyWpdlpFhZj6EAum0UrJBmbmKetdxvpuUGE
      YAeR0Oq7WUdXBxdPniDS0c1ybImxsXGymQIdPT00+0QCrX0UsjGymQLT01MIDjcOScLnEusY
      K9eHyh/cTpyiKJa1bWRMKBG8nWhFUbTGrDduJUOYfTYKp9OJ3++ve/JLPVQy2A3ZAXZs38Kl
      C+dpa4nidwm4w02omobkkACDdEKlZQOxJqLkIp9aJi0145A89G3rJjk7QnNHL6LTyd79+4mE
      ggwPLTGXKNLb00VbZy/ZVALDoOZqaiIUiSIJ0BQupfZkU3HCzc00t0SRXAKaopLxBIg2NeN1
      Sjg6t7G0MIvkWz1TSnD6aGltIxpwQbQFr0PEcPnwiApLOZ0mnxOcEZSCTDTURLgpiF/TcDoc
      G8rM2yjsxGonzMp7Kt+bq7u9Xz3irxzT9C2YxF/JFOuBoijIsoyqqmU7yHph7h5lSnA6nV73
      ALWQy+WuS5bOjRp3M8fezDkDBINBMpkM2Wx21VW8luizGlYjxEpmqSey2Ff1Siax328SLrAh
      8UeSJOsZuq6jKAqCIKybAURRpKmpCU3TyneA62FZ2AzrhGEYm2r1uN3mbC5UqqqytLREa2ur
      1WZfme1yeCXsK68dteR683rlffXk9lq6Q737TKLdiOyv67q18jscDgzDwOFwbGgHEEWRYrHY
      CIa7nSFJEi6Xq6acb0fl/z6fD1EUyWazqxKeXTY3Cc4cz3wvimJNS5RdGdZ1ve4KfzVWeHsf
      c14bsYZ5PB6LeW89P38DG4IkSRQKhTUJyS66yLJMoVAou155H5SI2+v1WtdNQl6L2GpZmq5W
      2bXPy65j2McymW29MM3Vsiw3GOB2hyzLaJrG+Pg4sVis7iqbz+eZn59ncnISTdMsIq60Cpkw
      V8hsNmuJFnYmUlW1pinUhPkMXdctUcXhcNRlgtUsR+YzK+817zfHXg9cLhcul8sa84aKQPLp
      v0a9+J2q6+5n/h2O5h03cip3DEq52Tk6OjoYGhoiny9FcYZCIYLBIIZhsLCwQCAQwO12Wyu6
      HXY5HUoEpWlamV3fvM/cCQzDQNM0HA5HXT2jln5RT/ewj29XnO2wy/h2Jlgv8QuCYH1+03x6
      QxnASM2gTX9U3aCs7sxpoD48Ho/lcT5w4IBF8JqmkUgkUFWVaDRq2c0TiQTZbBZ/HU+03Zpi
      J8TKFdcUh9ZSPO3WILtyvB7FeS1HnclQoijidDpRFKVqp7CP6/f78Xg85PN5SwRsKMFrQBn+
      IcqH/1/VdddDv4LU98BNmFE57Ku0/cf2eDzkcjmi0ah1nyAINDU1kclkSKVShELlvotK8cS0
      sNRbyYFVGaCWP2A1M2ulxamWSFSpXwiCgKqqll1fUZSafc0FwJy3mVTUYIA1YOSW0GZOVF/P
      16+NdCNRS1xoaSmdDWbKupXtgUCAdDq9asBepcPLXO3txL+aOGMfw7xnPSbP1UIwVvvMZlxU
      rR3E7Xbj8XjQdZ1isUgqlbL6NRjgJiL3rZ/HUMtjWMSWnXg/9u825Xl2wvH7/SwvL5f5EDbj
      eas5uOrpDvb+cIXRzD72Nk3TEEXRigWqjEESRRGPx4PL5ULXdVKpVNkzGwxwE6HNnga1UHH1
      xqVtBgIBMpkMgcDqtVXrhTasFb6wln6wXtNtJaNU/m/uTHbi13UdSZIIhUIIgkAmk6lpLm6Y
      Qe9iuN1u8vl8mWhSj6hFUbTMmBsNr4Da4sxqsr79nkKhUOZ4s7+asItZuq4jiiLBYBBN00in
      0+Tz+Zqm1I0xgGEwOzVOPFWqIJBPJ5iZX+YqnHkN3CIIhUIkEokNOblW8+xCOWHX+rO3rRU9
      WigUSCQSxGIxZFkuW+0ro1lNpdjpdBIMBi0noSzLNfsIgrBBEchQ8YVamJoaJ7J3L+PTc7gA
      uS2Ky1h7SzTqbO/riQS8Gpf5erDms1dr2qQ5b9ZnrQUznt7u7Kol8lQSfK3AtvWEY9S6Xm8s
      RVHI5/O0t7cjCAKpVIpCoYCiKPh8PjweT5k45PF4LEuPqqqkUimKxWLd+CbYqA4giMxMjLJt
      5+5SZ4eESwAd1mUXrvfD6rqOsEq/9dibrxZrja0btdvW7He1czbWlp2vJwRBIBQKkU6n8fv9
      JJNJotFomQl0NcfVWg6tSnGpnjJrh3nNnIsJ07mXz+dJJpMsLi4SiUSQpBIZF4tFa7U3Gbae
      6GV+pg0xgC7nkBGJxWJoAS+RsJ9ETsWDgLDijl7NKycKtSWuNfutyJ+bgbWerdVx3a81p6ue
      s8CmfdZ6MO3ny8vLRKNRpqen6e3txTAMMpkMxWIRl8uFz+erWsnXkt+BKkayW3XqwbzP9DTb
      oWkaXq8XURRRFAWn01nVF7DEndWetSEGEN1BDu23pf0Fg9yZJVPvPpgKo9PppLW1lXi85OcQ
      BIFwOEw+nyeXy9X1IK8GwzBIJpOWk0rXdYuA7ePZGaYW4ZpikblDSpJEJpPB6/VWMUmtmKNa
      O1nDDNoAgiCUOcRMxxFgxQT5fD5isVjZLrAWDMMgl8tRKBTw+Xw0NzcTCoXQNI1kMlk6byKX
      qzLDmgTu9/vJZrNWu2EYZbm/DocDv99PLBYjEAjgcrnIZrOlKE/bLuPxePB4PDV3ggYDNFAT
      djHCJMhgMEgikcDn81V5kCtlbUVRSCaTuN1uq+KcaWUyCdTj8RCPx0kkEpbFJhwO43A4UFWV
      TCZTVZbdtAKZczSJO5FIkMvl8Hq9BAKBsh0gk8lY864UlxoM0MCaMInJ7XbjdDpZWloiGo0i
      iiIzMzP09l6p5mEYBoqiEIvFLOuNHfa0W0EQiEaj6LqOLMs0NzeTTqetoLZIJFJXH6pkuKam
      prI2O/x+Pz6fj4WFBWveJhoMcJtD0zSKxSI+n88KCzAVyOsJO8E1NTVZeQI+n/9FYtMAACAA
      SURBVA9ZlnG5XMTjcSvMuLW1ta6oVCnfm7sBUBWgt5H52V/tMGX/aDTK8vKylRHm9/sbDHA7
      w+FwMD4+bsm3c3NzhMOl8zrNgLjrBdPBZAbQmSLQzPw0r77xA1wOF08deYZIZO3SMx6PB4fD
      QSaTWfXejc5vLYiiSEtLC4ZhWH6CO4IBDE1GG3u76roQaMPRvu8mzOjGQNd1K9bffB8IBDbF
      jyAIQs3zH0amR5jwXUbMSjxQeGjNFdwcZ72K9PVAZai4KIpIkoTX671DGKCYJv8P/7LqurTr
      WbzP/h83YUY3BoZhlMm+mwXTHm8Pk5iem+LS1EXOJU+BFzSfwvfPfo/n7/0xIk1rl0O/kd5u
      KBfh7K+NYLgG1oQZTmwqpLqu89KZFzghv4fsvZJcP++e4oUTf8f0zBTJZLJqnBu56td6dq2Y
      pDtiB2hgc5HL5ZAkiUAgYDnECnq+6j5BEFhwz/AXF76GTwuwP3qYx488sW5leLOwGuM1doAG
      1gVVVUkmk8iyjMPhoMlTX/QSvQKFQJb3M29xeWyo7n21IjpvNBoM0MCqSCQTfPuNv2JieoJ8
      Pk82l2V+cR5lHUVpBSdcmDtXFghnBqmtN6nGhKIoZDIZK0TD7GuHruvkcrl1jwkNEeiOhhni
      YPoHap0nIEnSqpGrZ0dPMyYNMTI4iFEAp8OJ4TDQPSrCGmV7BUFgUD7P2aEdHBg4WNa2UdHH
      NFua4dCmv8HcRUzvsZkemUwm2bp165rPaTDAHQpBKJUBkSTJInyn04nT6bRCCEyHWaXCahKU
      LMuMxobBA6JbADforBDeemtWSwY5ubzsTa0gt1rXy4ZZ0UHC4bAVn2SWOEmlUpZH2QzdWK9D
      rcEAdyiCwSAOh8MKDqtEsVisW1JckiT8fj+DQ4PMGTPXJifrEHAH6xJ5ZRJ7PZjMW+u63++v
      2baeXabBAHcgHA4HLpeLVCq16skp9cQes8/Q7CXE6kJyG4Iku+jt7LVMqJUlUsxrUDucoVZO
      gR3XWnO0wQB3KDZybFAlZFlmenYavyuAXjRK4s9Vwmf4CYfC1v+V1RvqVZyohXq7xbWYUxsM
      cAfCrISwEcLIF/KcvXyGycQ4U5kJZGcBvxoC19p9V0PKleBPXv0q3YFewr4mgu4QgijQ3dZt
      xS2ZqEXclWmNlRll9VIuK8et/C7M9xtkAJ2Lp86x9eB+PILA1NgIWVVgYMfWm2rLbaAaGz07
      K5VKcWL+A9LeBIRAAHKkEK/xgCZBgkVmWZRnMYorBGiAeFni/vZHePzwE2UiTC06qswUq9VW
      L+m9UpyqZJwN7wBeh4QCeCitGqrhRAdYKYe92hdfL8Fc0zSM1fqtnAhSD0adUh5m1N9qWHPO
      Wv2k+FX7rdFeF+uY82agva2dPdH9vJ9/a9OeYRGjAIZf493k68y/Ocsj/Y8TiUTw+/zl99Xr
      v8o9G23bGAPoBrJSJJcr4HFJRJtbmZ+aKTHESnK5maFfC9pqSfGr9DOj9+pOa5WkidX6mc9e
      fez6SfGr9VurvS7WMedrRT3RqMkbwcgaCDXOQd6UeTgERo0hRk4P8njrx3jkvkevapx6K/56
      +m1QfTYIdLTjKBZRVRWfz0vn9h24G+LPbQVJkmoWxd3R14+UuUahf4MQBBD9AscX3rOS5q8G
      G/H+2vtsjAFEic7OTlqiTXi9Xrz+IJFwcFOP8Wzg6qCqat1DtBVFqRnb7/V6afN0bPbUaiLn
      SjMyOXJVfSstS+vBVSrBDdxqMAzD8oxKkoQgCKTTaQyjdHLi0tISfr8fWZbL7O+m4un1enE6
      nYiiyOXRy8wUphBu7CYAgOAS+N7l79DcFCXoD60pmlb130ClCpP4dV1vMMDtDjOJ3OVyWSKE
      LMt0dJRWcp/PRz6fx+fzWedjmYxiVlhLpVKEw2GOjb4BQR1u0p6ec6X5+jt/jGqouEQ3EXcz
      zf4WXKIbn9NLUk4Qz8bwunz0hPvYvW0PwcD6jqI1FwBFVRAQKMpFLoydbzDA7Qxd11laWqKn
      p6fsMAy7eCMIgnVgt8vlsuppmlWhA4EAPp/PYiTBe3MF2mKwlGeQ1YvkxQwz8nipwawiLwE6
      XIqd5dTCcR7d8iQdrZ00havDszVNY2RimLNTpxlPj6LqKgpFHEiooorob4hAtzXy+TxNTU1l
      xA/UPfWlWCxazGEvGzgxM857w++QcC9veO1fTyDbWqinwNay+9ufu+xc4O8m/hJpyMXepoP0
      RrdQLBY4vPcehsYHeXvkDZaEOQSXACu1t0QEDDQcNDLCbnu43W6CwaBF2BspKWIYBpMzE7w7
      fIxRdQjRte74zqpxrhZ2wq+s87NemV6QBDRJ4YxynNNzHyLIIu/PHCPlTCC4145abTDAbQxJ
      kkgkElasv2EYVeEFlViKLaJrBiOzl3lz/lVEv4DoujliT73qzfZ2qO3BrQVBEMBtkCaxbmau
      ywCGVuS1tz5g7+6dtLW10zD133rI5/OEw2E8Hg+appHJZJiamqK7u7tMNJFluVQ6xdD5xvt/
      RsGZQ3CW7O83A/VWfTvs87eXQ7S3XQ/UZYBCbIKL47Pkclme/ZFPXrcHNnD9YGZBpdNpNE0j
      m82WVWSTZZmX3n6BBW2Ofv9uMlqaoi+HKN281cwUe1Yjfjuuxsa/EdRlACnQTk9IxBOM1rul
      gZuMYrHI7OwsHR0dqKpKZ2en1XZ+5DxvjLxKxpsABI5rx0qEdBOJ38RGiN+E/WyB64m6owmi
      xMCe/Sj5dL1bGrjJkCSJ3t5eZFkuK5ClKAqDMxfI+pIrxEYpvufm0/6qlp319r+atnqouwMs
      zIxz6tQZQq09Gx60gRsDs7y4z+djaWkJp9OJIAjMzM0wlL9w02T8erDH7K/GBPaD8Cr1BVMn
      sB/SXSkeVWaRQe0DM1b1BC8uJ2hvb8OxUrW3gVsPgiDQ1NRkObvMHz4SifCPl19A88o3LLKz
      HmolqtgJF+pXdK6l/AqCUFbFwl4NuzLFs95JM/b51BWBdm1r5+SFEebn59b9YRu4sdA0jVgs
      VvXDi6LI0Z4HeSr6Sdy5a0zqvQZUrsD2v0orjz3n1yRo81xik8jN+8xzw+wMtJqZtFbapfmM
      ugyQyio8cvRegjVczA3cOmhqamJxcbFKBHjyvqe5/8CDtHu7buLsrsyn1rXKOp0mYdY6FMMU
      Yew7Q6WSXE9BrkzCt+8sdUWg+aU4seUkqnhriECXJpeYnE9VXX9wXw++mzCfWwHmSlivuoMg
      CHQEO5nIDN/gmV15fqW4U+ueWu9roZIJ7Ndq5fzaGcwuNtmfU5cB4rEYBk56u7tXndSNwpun
      JvjOscGq6zt7m/GtLyDwjoQgCNbpKoZhEI/HURRl5U8ms5xFF4yb5u2tV/3hWsesVIjt/5vV
      4qBc96i1Q9RlgEee+uQNP6+2gauDrusUCgXi8TiSJCFJEg6Hg3gqDh6D5nwrMX3xpivE1wq7
      5QeqdxiT8Ct3HXPlr8WIdRmgNvGrfPDau+x54hECgsDw4HmSOY3Dh/YjNmIlbgrMHWBubo62
      tjbgCqHs37OfA8IB4ok4b557jfPqqU2p3lHLvLkZoQuVViFz7MrnmiKP2WbfDSq90BsMhpPo
      6WzH2lREN91BgSzg2+SqEPXkXG3lubVwt1SFyGaz9PX1oaqqZTkx5yCKIpGmCFsj2zk7dwJB
      FMpEgfUEmdWD/TepVGavNX6nkljrmTRX04HsY9nFJPsYG2MAtcjk/BxN/gCEAwiGzExW4xAg
      bnJViHoavsPhwOGo7QG8W6pC2M2KZs1P0ylmEuLA9l0cWjrK+fQZFG8B0SFi6EapRInNVFkr
      /KDSKbWeYDZzvKuN3zEXNZOJzeea9n4zq201/cJsq1WG0cTGvmnJzf2PP2b9Gwzu2VD3Bq4/
      zB/XJApJkqykd4/NielyuXj2sed5LPME54bPshRf5KzyEaLnym5hllG3o3LVtCuY9bDe8OXV
      UGkONYnZzH/WdR2Hw1HGIHaIomgxkcPhKPMx2Bm6kQ9wG8MkhMpyIuap65IkWeXQzZXQKTm5
      b99RVFVl8NULqJ4r6ZP2nXYtT+1a87rWyE3z3IJKXdRO9HYLUC2Y99p3APt4gtA4JO+2Rzwe
      t0KgTUIwT1rXNI18Pk+hUCCfz1vJ806nE4/Hw9Guh3BknZaHda0ShevFeqM91xrD7vG1/603
      IrRy16q5U1zTLBu4qai0g9stIKZu4/F4cDqdOBwO64BqKBHFY4cfZ7d3/6aEGV8r7KEP9a6b
      f6ZYVGvnqQyxsOsxhrHhynAN3EowDMMKhquU083tH66INoVCoWqMeWV2Uw6qW491ZjXYIz4r
      xzXnajKtKQ5Vnj9WD2XOsaueYQM3Haalyb5SVgaIVcbO2JlAEAT2dRzA2IRavHYn1NXoA2uZ
      PuGKpcgUcSotVbX8BiYaO8AdhMof2Tz/K5fLWQpyoVCwCCadTlMsFtF1naN7HyBcjF6z0loL
      9p1lIyu0icqQB1PUMWH3eZj3m1gP4zWsQHcIKpVOQSjlB0iSRCwWIxgsBUuZJRDdbjeqqnLm
      whkm4+ObKv/XClmulMVrKbb2wDW7KFTLB1EZCVvLgVYrgrRhBbrNUY8ITJhKcD6ft4jI9JxL
      kkRLpIXz6dMkvcubEiJRb772vABTKbcrsqY/otKfYO9nfuZ6OoL9WXYmqjSLNhjgNkdlFKQd
      yWQSv99PS0tL2Qprhml0tHfQ6mrH4PqKPxtlJpNITeKslTRzPeZRGTrd0AHuAKzlrDJXO5fL
      ZdUDhSuH6LV5OtCVq7fW1MLVEKy5G5i2/2sZz74zVoZ2VO4MDR1gEzEyE+f8+GLV9aO7u2iP
      BK7bc2o5nnRdJ5/PW+USBUEgGAwSj8cJBAKoqorL5eLJw0/TNd7N0PwlhrmIWCf26WahVgzS
      WvfXG8P0d9jHazDAJuLs6AJfffFE1fX2SOC6MUC9HSAWi9HR0VGlXDqdzrLjU51OJ/v69zOw
      dRenBvs4M3+SmLZEi9TGsrCAULvO7g1DLTPoaveaqJU3YPeNmLtBgwHuANSS/R0OhxUSYZ6i
      nsvl8Pv9aJpW5aSSHBKHB+6ht6WPqYVJjh68n9dP/JDj8XcxPNdXRKrEegPnNsIM9vtq+RPM
      naDBAHcYTEUyEolQLBatFV+SJAKB0q5j+gPsJ8vASlxRSyvtbe3ous5jh55g6+x23hp6jVlp
      EoTrl9xSaQbFAL1gIHpqF/CqXM3rjWlXnCstSSbsEaS3lsDXwDXDtPub4dEmQ5j5Aeafx+PB
      7XaXWZBq5dH2dfXxTx74KR4MPk5L/vqeH2YocNh5Px1KD3uch3gy+gn0eMU9RnlFh/WGOVSG
      h9SqJdQQge4A2B0+CwsLhMPhMnOfw+EoVYZeWfXy+XwZEXm9XlRVpVAoYBgG2WyWQCBQJjZ4
      PV4eO/wE22Z38I8XXiSuLEPgGsQiVaBZbWV/xyEO9d9TFsU6krzMpDGCoYIgVRfWWm0HspuC
      7WZVKK8oYR+jwQDAr/6nl1hMlp+o2BEJ8Af/8tauim23/qTTaUKhEC6Xq0q+dzqdVn6AmStg
      hyRJ+P1+/H4/+XyeWCxGJBIBKFtBO9s6+Xz053jnzDFG45dZcs5hGFgVJwzDwFBAcIIz76ZD
      6GFWnkT1y+BYId6iwE7XXp59+Hnr+YZhWJUstka2EZbD6BgsFueZd06XWW5Wi+2pFzdUaSVb
      V12g2jAYGx4k0NxFS1OQ+elJEnmVgR1brYd/7ne/XdVr//Y2vvizj9UY79ZArqiQK5QnleTl
      qz+z9kYhl8uRSCRKW3mds3/tMON/TKXYDpMgzMP0EokEhmEQCATKUjQlSeKxex7naOEoH575
      kM62Ts7PnEXRZUJSE5FIlGNzr/PZe3+W5kgLM3PTZPJZLs6eY1lZZFu4nycPPw1csdQoimJV
      sji06x7S6TQul4vF+CLfvvwXiN7ymKBaZl97SHetwED757RbgzbEAGp6Ft3fTXxxlpamIMux
      ZZz+0kphbje5YjXhFGSlZHlYJSmeOont1th1ZD9d0+omrptu9dWgaRq1HKGGsaIk1gnpNYOz
      Vp3z1fQ1WHPOJuz1QK/Mu/YK6PV6y+alaVrdsjeSJNHc3Iyu6yQSCUtZNuOIfD4fHo+XR4+W
      FrUdW/oxDINUKkUileAxx9M0R1oA6Ooo1ZXqbOlEURSi0Svl9s2DO3w+n3XAh+mgi0QiuN1u
      Hpl/imPZ1xDd5fkO5mczP7Nd5l/LOWj/jjbEAILoRFUKFlH0betnbnSMPOAVBIQ6Se8CQplr
      uxKrJb2b7fUkv1Lf+knxawV6iaJYt2x4ac71k+LXnHO9z7vavITaBZxWQ72YGPurfV6qqlrJ
      8/Ykmcr+DoeD5uZmoMQ4sixbRGpmldmhKAqtza0EfAEKhUJVaINJ3Ca8Xi+CIFAsFq1o1WAw
      eEU8kST29O/l2IevgW1zW00PqJXYv9p3tiEGcPhbCMYnCPRuK51KUszhbm7Fi7nS1O8rCELd
      A8tqbWm17qnTUJeAV+23Rrtgmvw2YWzW+LzrNTVWWkjs/Vdb/cyVXBRFZFm23q8GM36oubmZ
      QqGALMvE4yWTjaqquN1uFEWhUChYK7qZhWbOxX6Inz28OZfL4Xa7LTNt2WF/AlQSliAI1viV
      Ht618oQrv58N6gACnT1bVt67IBikUTr31sJaxC/LsqUzmJlU62E4e/kYr9driVSGUapjJAgC
      siwTDAZJJpMUCgU6OjqsZ8myTLFYxO12W7H6ZlSqpml19Ze5hVlwGlSuRLUqwK1n5a/8Php+
      gNsY9uA2WHsnNWVuU+RRVZVsNruuqEszRLmyaJcgCGWVJ4rFIh0dHTQ3N5edXG/OzTyx3Ryn
      UCjUnXMimeD45AcI1Tp7VVDbajAZxR5ubY7RMIPexnA6ncTjcet4pNUiQkVRxOVyUSwW0TQN
      n89nZYwlEgk8Ho9VWc6MyDStReYRrJUHcpuQZRlZlolGo8zOzlpOtlQqZfkXHA4HmqZZOoem
      abhcLjKZTM3zjfP5PC+e/HsWvDPr2qHsJtBaJ8xUhkFcpQjUwK0EU3ww/8zV3e7qT6VSKIpC
      KBSyVmq/319ycHm9VtUIwGqHEkEVCgXLiQbliermifOmh9nlcrGwsEBPT4/17JaWljLCM3UG
      WZYtBbqeCHZp/CILjvURP9Q+icbOCHUNEusavYFbEtlsllwuZ2V+KYpCOp22Vmwo5Qc3Nzej
      aRrFYtGywpirY7FYLJOlzR3AVJTtFePy+TzZbBZVVS2nGpQYUVVVAoEAsVisbI52R10+n7cU
      V9MS5XK5ahKnJEgYKug5A0NZfz5Apc1/LQZqMMBtDL/fz5YtW6wf2ePxEAgE0DSt7IeXZRld
      13G5XFZ+MJQI1+crP17EtKQUi0WKxaIlx+u6jtvttixGdtNmKpXC4/EQDodrll4xV34zT1kU
      RWZnZ0mlUvj9fus+O8H6PD4+0f08P77tM5BfP5lWxjStpQw3RKA7DKY4YoY+QCkbzJTfl5eX
      0XWdQCDA0tISgUAAv99PoVAgGAyWmRVNCw6U9AC7tUZRFEumD4fD1vPr1es0441Ma1I4HC5j
      xsra/9u37ABKynfgcpCMkVy3OKTLOlJWQwnVV5DNHbDBANeI4shIlRdbcLkhsvkG4no/rinC
      ZDKZshUWsIh2amqKaDRqiUS5XM6yw5vEUWYvXzFlQnnh2sqCusFg0PIFmAiFQiwuLlo7RLFY
      LGtfjbAdDgef3PMcr51/lVhovqpdV3QEScCQS5Wu9bzO4XiaR3w5vj8TJOF0Eg+4MAK1nX23
      DAMYqkrqhRerrjs7O2DPrVuFevE//Ef0dPlh4s4tffi/+Fub/uzVtndFUawyKCZ0Xae5uRlR
      FPH5fNaqLwiCpRjDFauPKa+bBGp6ck3xx7T/22OLPB4P2Wy2bC4ej4ft27eTTqetNrOPKbKY
      4lStz9TZ3kXuUqbsmi4b6EknD2YXyIoiPZqCLAgMeGWiYQ1JhM+5kywVRL5cbIMKBjCfc0sx
      QPKbf1l13XvfEdy3MAPcSvB4PJYMXhnrY1/RzfdmKII9jsZ0TlUqk+aqbQavmSZTTdPKmM3p
      dFrEbZpTvV4vTqeTXC5HsVisOv9gLUuNIivsCA4wnBqkECgxkJF30NbzJPLscZ7jDO46Z0QE
      nDqhjEoyIiGIAoa+4lJbWRduGQZo4NphEpZJpGaog702jmkN8ng8ZSbIslo5FfK76UAzV037
      iu90Oi0dwzSZmhGklWVIzKK9ZnyR2bZW8JrP5+PjRz9J26V23p54nYAcZtE3TT65xHTP/Xzr
      TI5/1nK5Zl+PA37Bv8wPp/yMCk0EotuIhps5v3S6pI9s6Btu4IYh+fd/T/KvvlV1ve2L/wv0
      9lZdd7vdlklRURQcDoelsJrEbcbcmHqBnajtYRJ2plBV1apBWhmlal43C/SuBVVVq3SSjeDg
      wCFC3ghvzEziirtwRnxIHg+EI2gGFFQBUQCvVJ4VllYceAsuPvMTv8KO/oEVy9WP8udvfK3B
      ALcsdKN2iLg9lHfF/u/1ei3riymW2MUMcyWuRXx2b6lpzzcZplAoWGZPe61Nezn29UIQBDo6
      OkgkEiiKUhXEtx6T5XIsxttjozg72mix7SLZbffytekgWsCHMxPjM+o7+FaYQDFEJrt+nMOf
      fJC+LVsty1YkEsHt8DQY4HaGIAiW5cbE/Pw8Pp9vzeQYO0zitnt8zfFNBrHHz9if7/f7180I
      DoeDUChkeaftTLVaMdvlWJw33jvN8EIOZ8igrbMiMM7pxNi6FxHILoc4MTnII+ElAOac23no
      4z+Oz1fN/PdvffjuYABldg4tmai67t6+/SbMZvMgCALRaLQq77UezJqh9rqhUH44nikCmTDv
      93q9uN3umtllq8HpdBKJRCgUClbWWa0EIMMwOHXuErmixumRBWJaEMETRFDmyC/HcIWCOCqe
      rebzuHJxcJZ8HuO+e9j5/K/h8ZY7+wqFAn/60h8zVhjeeErk8OBFgs1dtDWHWZqfIZFT2bG1
      b9VcgJuN1He+Q/bVH1Zd7/rD/xtWwnrvFDgcjnUds2o6peznaNkPlrOfxmgSqWlVikQiV3cC
      5goqD7aolc8ryzKvnJpBdoRBCFv0VVSamL1UoGMAfC3RsnHV2BI/lnqFHq+MAUhdh6uIX1VV
      /ui7/5kZJhE8GwyFUFMziE1bSMVL5f4S6RweTaFwnYurNnD1MFfk9cTDm4FspuPMrjvYHVy5
      XM4Skfx+/zURvwmXy2XlFJiwzzmdziAbzupkGMmD4PSjK9W7hrurh5c6Ps07hW4SsoSrqavq
      HlVViRdj1rAbYgBBciPnM9YKoyoKRUWhdmZpAzcDtY4VskPXdZLJZJkiaxamNY9YFQShzHJk
      KtrRaLRK57haOBwOAoFA2UF4cEUpf+v9kxiOOnqMlsMdDqAWixi6jq6qzJ8dJzk+ixBt5/T2
      ZxkvBtBP/QXx5fLarG63m8e3PUWL3k6X3rfBlEhfM03OKYId/aTTabb2dRHPaThXyxts4IbB
      npxSSw/QNM0yRdpt9OaryQymM80wDDwejxW7cz1Wfvtc7TkKlXM5engf5384AmL1M0VBppBI
      szxRRJJ0BEFHoY18XkN0LBLqbePYluf59PRfM/XSlwh97j+UHQ74zAMf50ntaQwqYoHSFS79
      WvAFm9DkPACKLhLwiGQypX65XJ7njvZV9WmPBkilUmiRvWj7Pl/VruteyOUQP/Hxqjatq4t8
      Pk9/h7/m2KIuk87rKDXGVVp2oqRSqDt3Itb48bK6TiGX46kDXWQLcllbwFdK6NC9vag1xtZc
      7YipFMKTTyAWi2VtRlMT+XyeziZXzTkH3aUKCvKez4JekWEV6EBLpZC7u2p+H3nP6qY7U5yp
      jIuXZdlKhDGdY2XPXSFIuxfXJFBT7NmI2XO9MEs3VkZxdnW2c0/vLCdmNCoLExg4WZ5ygKsF
      89sTBAFDEInNqYiuJfxtzbyWe5KHlt/k0sl32XPvw2UMZjKzYKxHWFwn0ul0WYSfHauV4bBH
      INZCKpWqmTW0nr6rPfda5rxW+2pzXqvveuds5tjaYZYyMZ1hZsqhPafXDF2o7JdOpxFF0TJt
      Op1OQqHQhm3+64VZSqVYLD+s2+v1kslkkGWZv3jpfaaypc9YqSib1+zjAUSiCcJbO0v/jw/y
      Y4U3cT3xb+nbdajqc2xKPsD0+AiXBi/x+mtvkM6VVlbzB9X1AqdPnubd115ncGrW+hB2Ap4f
      Hac6qhxUJcuZU2d457XXGZ6Zr+o7MXKZS4MXeP21t8nLatlzS1AYG52uOeel2SkuXLzE66+9
      TjyVreircv70GU68/w4nzw9junDsYyfnZ4nnyncC85lnT53mw7ff5szlcctcYPadmxzj0qXS
      c1PZQo05w9joWM0514L5fZjVFswwBbv4ks1myzzAZtx/KBSy5HKn02k5wTaD+M1nm/kGJpP6
      fL4yE+veLREMObPGSGWjoilX/BhaxxY+KrShvPklLn74WpWFbFMYoLWtFYBQpJmAt3ylEQQ3
      Lc0hMES6u6uLreq6zMjwZSam56raHJKPSCQAgkRXZ1uN55aKMUVa2vA4q1fQxbkZhodHLOaw
      I9LSglMU8AaaaAr6KlodtLZFwRDo7O6sofFojI+OMDY+XcMeJtHaGgEDuro7q1qbV055D4Sb
      Cfqqlb7E8gLDw8OksrWYqzbMXaEypBmwUifNmCAzqM0MoxBFkXA4TDgcrrLSXG8YhmHFDDmd
      TuuZZjYagN/jwmFbHFdjxtJnFUnF3SRGZwCQPB4m9j/L27kOoqf/M6de/VZ5fvBmfDCXN8jA
      zgH27uplcbFCrzB0fMEmwi1BFmeq47tTqRwDB3YjJ+PIavV219O3lfsevI/kQvXJK0XFIBoM
      IBgyslbeVynm8AZb6ewIE08kq/o6nB527NzJoQP9LC7Eq9olt59QOEgyqJO3gQAAFRtJREFU
      tlQ950Sabbt34VBzZAuVlfEE2rt6OfzAUZRkvIpB8gWF1mgYp0MnW6w07SkIDj+93e3E4zHW
      AzMhxl4rxw5VVfH5fBbR23UGv99PNBrdNHm/Eg6Hg3A4TDQaJRQKlT3XjC6dno+hS+UL0lrR
      o4IzQGLOQMmXdFVRklD8EXQDopMvMj1ywbp3UxhgfPAMpy8MMjY+Qryi6KxhyExMjCN5IiSX
      q4lpanSUidkYO7ojzCyUE6quFjj21jHGJiYYHZuq6rswN8NcLEM0IJFIlwtRci7J+TNnCbb0
      kYpVM8/yzCgfnjzLxMQY80uVXmON6akJVNwUUgkqS1HNTU5waXiS3QO9TE1Xjq3z7rG3GB0b
      Z3h4rIoBYotzjM8s0dMRZmEpVdFa5NLFc+hCiHwmuW5viyiKluxeK8TAjOOvhOkXuJGw5wNU
      Xl9YXOKDkbUNM7UHBtEmSi607iGlSEQdGRJvfwVtRRTalFCIvp176VBUVEVDrDBjiaKH/m1b
      GByeYPfevVV9+3fvIp1MMDqdYOfuXeV9JTdHjt6Hqqr09FTz7s5duxkbHkRxRehqKl81fOE2
      Bna5iccWCUVaq/pGO7cQaFFQFbVqziAx0L+di5cus3XXniq/x9aBAVKpJCPDM/T276xoFbn3
      yNGVOfdUrThb+nfhmhphMSUwsCNS0epn956dxGJxBGeY9cKMwTcruFWiXvhCvVqmNwOCINDW
      2kJryMVChfRX026j5ChF+pfOvHQIKggC2nIMw+NGWFog6CwRfVNxgrnpcbq37NgcBhAEBy6n
      QjKh0Nbmq2zEF2yis7OIx1X9+PHxSQxDp68jyMx8mi2ddkuKgNvtJpFI0t5erQMIooPunh6y
      sqMqNKOQiTE3v4wn2EJieYGu9ubyvoKI2+UgEc/QXtEG4PIG6OrsxO+tltOnJ8Ypqjp9W9qY
      nFpk1/ZyWd/ldpNMJGhub6/SHwRBoKu3h/n5fI3VV2Z2dh7dcGHk40C1DlEPoigSCASIx+Nl
      5QJlWSaRSNDc3LyqpelmQxBKh/r906cO8O0fnmGh6C1rszNBX1DmUw/tR9NUHKIDWVE4MzrC
      /MIiH997AFEUSeam8aVLfQKSzvTk+c1jgMmRIXIqGGoWXdxJR8uVSDxNTTExkWJxfoqZ+WXu
      OVi+C2zp7eTS8CiTi3kGBrrL2lQ5y5mzQwSCPpbiKfbt7i9rHxkeQStmyRaK6P37aQ5dKd7q
      CTbjdydYXpqhu29r1ZwXp8dZSBdxolBQDbZ0t9hai4wMzxNfnmVsao57jxwqW8l7+3q5NHSZ
      kbFFdu6q3AFUTh0/jS8UZGZhmYMH9pYxwdjwCBgy6VwO2dhBb4d9pXcRDvqYW1ymrbPan7AW
      TDnajPVxOBx4vV6r1Il5UiSUlONCoVC3+NX1wlpmaxOmLtPSHOXR/V18+/1FEAWcWg5NkEAq
      ZaeFSPLcI/fRHG0qi2jtaG9DVhQkU8cpHCB76gcEnDr/f3dn8uNGdt/xz6sqklUs7mtv7EVS
      azzSaGakGWW8IJjAcAI7yGQDAsTwxYcgxyCXIH9BkEPuueSaU+BDEuRk+xLANpyZjDMeaaQW
      1WqpW72z2dyKxbWqcqCKavJVS62lZxL/bt1kFWt57/227/f7hAC7NQpzzyUH0KPGE1FTDcOY
      fKBChLBbR5QuvEkmKUNUdTPBG5cukk7GGQ6nCRgh9IgGCIyoXKEIKTBQDZZLc6jadEypsLB0
      gfnZIlpAnKsbBsoTrlw0qk99qjLoNsnNrVDIyWR3LRJldXWVXDaFM5xOZBWMJ9UdIzpdXQI9
      otHqwerKIprkEQUzcyVKC/OEA6paz7OTDZ/xtT7p6uq6PmaMdTqd5/YeXqedVf7d92KGHkHg
      Mhdz+Pu/+lOuLaXGHqCUj5HNjAg5/j35Fj7JiVbDON7T9x4djgod5+IB8jML5E/ZTkooEZYu
      XMQDdutyfAou6w8esri0NFH+AlC0MG9efevU3y3MzpIaDOladRy7B9HJybf7cB01PYMZkWPg
      eKbAmxk5rBqZysLSEq4H+zujJHh65VhfX2ehtIQm7bOrcPnNq6deczZfwEwOGNCh27AgM7ko
      1Lc3aIQzFIyXX5l9BeiT2Hu/9m+a5jj5fVFZ9pex04jvp5miKBRyGQzlAel4crQ/QQiWUy52
      3+PhQRvLamOa0bFKta+DNPE7ioo4UUaoHDfOUxbF4+6tz1EjBnOlZWInX57nsba2xkKpRNvu
      BBwrMI0IBwcHzJUMaUAdbT/i0B4QjyUozRUnPtvb2sCJpFD7LdSALmwik2H7YB8nlSFqTK/y
      cP/uF6CGyM3Mk05MDsTyvTVm5ku0rXZgNSYRM9k/OKA4u0A4NPlYraN9Ng7rxGNxlhfnJ0Kg
      2uE2R70QmZhLvy8P8mg2x87DXY76SUxT9iDPMj+O9rX3/RzDr/2f1Pf3B89521nVqE9+3zAM
      LhUjhJ54we//0XcAaFkW//CP/8zW9i5vrF4YaxWdbAZ2Oh0ONsuw8ROi2tMkXy+unq8silCC
      67RCUXnv/fcRQlAsFgOOHBE1hIB2d4ipT67WoYjGoN4lSLh/adXPJ2QYLEDPtnERNBpN5mfk
      SpCiCJzAlyN498b7IAQzp12zbYOAZqtLMjYZnoX0EMP+MBAyWFi4SJ4R6jfo1APbZigUGo0m
      lILv61mmaRrxeBzLssZiWZ7nTVSC/HLpl+EBQO50P8+EEBQSYa69tTr+GyAei/GXP/iI3Z1R
      d/+krqkQgkd3PuX47n/yrnYPXTvBNXAERnoUopzbHRuGgTvsM3Tl196uVVi7f5/HAY0wGMl7
      CFUjEhD3hsI6IU1hMJDDJyE8Nsr3uH9/nW4AXjys6ygCdD14pTOiBjhDBo68xg/sFmtrazzc
      3A70ALphgFDQdTm8UtQQkYhGL6AkiRBsPVynXL5PKwBKoUV0NAWMU675eebTFv2NKnyJw2lq
      40l1t/O0aa2is3zftm12DuusLE0WAoQQzM/Nce3atQnIxlh7tHnI9VB5YvBbTpid2d/nzevf
      BM5RFqXdttFCArvdJWVODopB18LqOgTkhFiWRTyRoNt3iITkB9Wx2niKoN225YOBWr1OMpOT
      /j/sd3GVMLGogW4GY9rbbRuhKtiWDenJ7zjDLk2rS8GQj21bFmY8DmoYI2AC9DsdHG+0mstb
      PUC9VieaCFKSG9LpQ8KMEoq8PCxBCEE0Gh1DH4Ks0+mcCgp8nXZWuiY81SP60U8/5e3LFwMn
      jg+bSCQSY+HeB198in7vR4RQ6YRVwqrL0BXshFbJfPgXXJlfGnvAc/EAltWmUCyiR1OkknKs
      nczPkYgogQ0Z04zSH3gUsyb15mSO4Az7KEacuB6hWJBDGBAsLMyBEIS0Se+hhiL02jbFhQW6
      ltxdtC2LbKFAJGKSzcj5gx7PkEuZqJomDeCoaWJ3BizMZakdT5/bYUCYdCxKsVgIDIMWSgun
      6O+ruN0Omfl5Bt2gfOls5iM7/QEUtE3ql+UBXrTTfFQ9Zq/W5cbVC4FNPWCcz6yv3aa6t4m5
      8e9cjjX5mllju6XwC/17HL/3t1z9/t+xsHxpkuP8SndzipmmiaKGKc3n6XbkXSOrO1uk5leo
      VeQQqNtusbOzw6OdKtmpVVhRQ6gezJZKqCKoa+lyXLfJxTQOa5MeQgiPo8o+6+UyEVMe4IZp
      gqdSWpil35MftF07RIvlsOvHEhRi2O+wt7NDeX2bbH56JVcIq4Lc7DwRLfhxH1RqrMyn2Nqp
      Tn0iqNUqPCzfR3kFDwBP6+o+A8v/n6/UEA6Hz8QlflV70Qnw8a11tLCOGY2ytycDJH1TFIUb
      v/VNrl7/AG31d0c6QY5gtxvlvd/5iMvvfDDGGp3EHJ3LBOh3Wty6dYt75Q2JiOJ5Q/R0kc1b
      n6AnMtKxRixJzIDaYYWaNRkTCwEPy3e5Vy7TsGTAdKfTJxr2KG/XyEmeR6FYzNNotDg6krFA
      zqDL7Vu3KJfXcaR12oVwnNp2GS8clR5aKBIlkzZoVKscHU9DdwU7jx5w9949jmqy5+l2OqQT
      Op/c2mRhRl6FZ2YK1GpNjgOu+UXNL3ee3D3dhzx7njfW7nyNFJFXssFgwNqjCl03xH/89Oc8
      3t175vfHuU3tEUNXsK9f5v0/+xsKxVNq8pxTDhCJxpktxqkd1UkWh6Q46dpHwKe337tJvxcM
      8Y0nswyGVYS0r7BgcXmJO1v7iEQQmEsjN1NiZkHguvJLVFSNdCqBEHJyrYUNSvM5jo4aRBJ5
      4GQ8LFBVhctvvYsTkHwD6GaKWLePEpAizy8u8umdB4HcaS0UIp4ucLM4Sz+gPyQUhUw2jXfK
      XshnNb9RZNv2OASIxWITnWB/TwBf5vCrtlbLotIagG7yswc9PgyfDRJutS2OV3/AtW/98Wjn
      yk4nsAkJ55gER+NZep0DxBTASgjB+uefQb6AMhRcu3J54vNmvQZKiEx+lnhUrosrmkomnYSA
      4dTvNPj44y8oFlLMLr0xgTVyhn06fQfTMNDN4GQvHE0QiweR/AW7D8tUeioRVeXtd65O+Ajb
      auC6EE8XSCXkB60oglwuw2DoSUmwO+jy8X99zPxcHjOziDnR8HKo2wMSRuSVkuCn16GME11f
      09MPBXxiCoyI8D6a9Ks1j5iwsNwYKBqf3DvkW9cPmJ0JLkX7duWjvyaRTI3DvmfZ+STBjTqg
      ki7MkYzL5buLX1vF6Q4CIAeQSKWJRsIMOhbdKT6A6w6weg7xqEE2O42cBCOWYa6YwnUVwpHJ
      ua1qYbLZNIqi0GxOw46h027ieYJ4KkcqKVd6FpZX0DwXwzTkJDiWJG4aeIMu7d50zuNSs3rE
      zSj5XEY6NqSbrCzN0us6Y8jEiasmn8+ees0vakKMwIS5XI5kMikNcP/vZ1WLvkyLRqN8eOMS
      1+dA4NJxVMrrD597XDKVlsj+p9n5JMGJFFE9hDscIHt1Qc+2GXoutZpMTIEnDQ3hYLcn43wh
      NHLZ0c2dXLGefj4CQzUbNawgBpXn4XkudkAHWo/GR4PYdXACYMHDXhfHdahWZT7A+JoVD6s1
      fW4xGsRCMBzIg0oIgeN59O0GtVow9W9Eb3z5KtD07502KE5CJXwtoPOys2iB6rrOd3/vO/zJ
      dz9kyewAHp/fvv1aYdvnMgGEgEQqSy4VYv9w8qV6nsMwFGWxWGB5SVY5BhgM+wy9CPnM5Eos
      hCAUMSgUCtQDyDRWs0WmMMvFy5fJJGTvIsSo1h/UgRZCEEskKeQS7B9Ms69c7KFgsTTPpQtL
      gQ/NcQZ0eh5zM9OeSaCGwuQLBVoBjDDbahGLZ1i4+AbzRTkJVhVBu92mUAguob4uk8jiX0JX
      +KwTLJ1O8+d/8NuEvD7lVpp/+pcf828//tmpZdEXsXO7y8PdTW5vHHNhQS4LppKJJ4lWUAri
      Ua02yMRV1jf2pAEz6Nl89qv/Jj8nTx7DHCEHT9t5sLK7QzI/w+7WI3oBq3H9aJ//ub3ByvI0
      7l6QSCafEMyDk8PDwyqzhQT31h7hTr1YZzjg9q9/RTwr8wF0I4oZNQiHwyiKfM2N/W3CqQKH
      ezt0Asqzr8tOssF8afXzzAFeBHzne/sffvca33snw9ZelZ/ePuZff/KLMyNLT7NzmwD1Vo+r
      Kxk2dybDHCEEWiiEpmlsPtoMOFIQUobcXd8hHtOkCVDb32XlrRtUdmVK5Ej6I4Rdr1BtymXS
      VDZD+favUcI6g4AJcFhtcv2tC2xuTfcnRrXjkKbxeHMzMAQyIyqf3bpPIhWVJoBdPSC3fIVW
      dV+6H8WXKxk0ebwvh4SxXIHte7dwhEq/L4d9r8tUVSWdTo85uv8XqkC+hUIh5mZnuXrlTb7+
      /jt8/WtFciGL4+M6rVbrlUK1c5sAIXp8/OsH2M0jKQ9whn2azQaZnAxZAA9H6Fy/sowjdOkC
      4+k0n//yZ9i9HtW6XFdvWy2GIkzSDFJYOOadD76JKjxiAQm4GVH4+S8/o2c3JSyR5zo0mk0S
      6UzgQ7P78I2bbzEYKmhTK5uRTLFx6xOa7S6HFZnc3mlbWB2PQlauTllHh1x69wOMkEoi/vKb
      SzzP/IqJv5P7l1kBchyHarWKbdvj3SinV/aTecvVNy7ywz/8Fh99+ya2bY9Zby9j5zYBeq7G
      zWsXMBI5qaxo16oct2zqAUmw53okE1GO2oLFYsCAqNW4evMb6OEw2dT05y77e3tYrQbdnrzC
      J/MFKo8fsbQSLItudYZ8/ebbhI24JKvSt1tUjuvUa3VpFfc8l0wmwdZ+i0vLcn7RbdZZunKd
      mBGhkJebfwcH+3Q6LVqWnLjrmSL24WNmS0tfigDlV1H69JtzjUaDSqVCpVKhWq1KlSi/i6vr
      kYmQrdvtvnTSfm4TIJ9NsXtkM1eUYQdqSMVzodNuUDmenATltbt4Tg9ND65DZ2bnqO9tk80H
      kVdGDStFwOOtxxOhStc65vFejU53QCyA1wswU8yxvXfE7KzsmRRVBW+Ug+wdTkIWttbLDNwh
      njBQA+J4M1uk36iQyOQCB/FIFUFld2uTwUQDr0+5vEnb7pJKnN/q/1Wbj0b1dU39rZkajYY0
      qKdZX76dxQMETZBzmQCPH21Qq9dIFkroAYhOz/UQikA3E+Qzk5UPXY9gdfpUdjcljR1n0OHO
      2gNcoTFXDAqfAA88YGGxNHFzQlFwBl36PZudfRlWcLS3xX6lipHIkwgQqPK80TVr4SizhUnS
      fDii0253aFR3qVvT5UqHL27foTfwKM3PnLqKe67D7OIioYkJ5IHnMhz02Hy8+xsrQu+D9VKp
      1AQpp9fr0Wq1Jga3v6dB0Dme571c15WBgK947YHWsTsoqmD9zh3MG29PMsKAUERHFTbhiByH
      L12YJpU/NWfYpd/3aFm7PI7HKEnqcAJdj9B3PMJTwLNINMW1a6dvXm23bISmsLleJha9JjHC
      VC1MWFUQYVkLe3Zx+Rl6DQM69pChW+HhVoyVKUYYjFa1Xr+PLlE1I7xz4+1Tz/ybZD4wL5VK
      0W63saxR+dy2bfr9PrFYbIxbisfj1Ov1iYlxlvDHF/ud+N3zEMd9toCpy/21u4TMFCuL89On
      CDRfaPZZ5wU43HtMtW6xdPEy0fDZWEdnuWbw2Lh/j6Gis3ph6Uxx8lNxXI+JUwsxSYk82ueg
      cszM4iVS5tl4v88Sx/3/an7o46tYtFqtJ8zAp08rkUhgGAae51Gr1cblUZ82mUwmX7h/8b+q
      BYRYfyS2WQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GDP by Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Kmean Cluster' width='192'>
      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
      ZDIZIpEI/z+dbIBYAbZBOAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Population by Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tourism revenue by country' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9Z3BkWXbn97vPpXcAEh4FFFBAGZTrLtNmetqMerrZ00MOydmVqNAqZLgb
      wZUUYoSkUARDoQh+2U8bsVpJVEi7Hzi0oxWDHHLazJDtZqptmS7vYKrgfSbSu2evPiQK5buq
      p7unOYX3i0Ak8JDPZd7/u+eec+65Qkop8fHZoihf9wX4+Hyd+ALw2dL4AvDZ0vgC8NnS+ALw
      2dL4AvDZ0vgC8NnS+ALw2dL4AvDZ0vgC8NnS+ALw2dL4AvDZ0vgC8NnS+ALw2dL4AvDZ0vgC
      8NnS+ALw2dL4AvDZ0vgC8NnS+ALw2dL4AvDZ0vgC8NnS+ALw2dL4AvDZ0vgC8NnS+ALw2dL4
      AvDZ0vgC8NnS+ALw2dL4AvDZ0vgC8NnS+ALw2dL4AvDZ0vgC8NnS+ALw2dL4AvDZ0vgC8NnS
      +ALw2dL4AvDZ0vgC8NnS+ALw2dL4AvDZ0vgC8NnS+ALw2dJoX/cF+Pzj5cqVK7S1tTE+Ps7R
      o0cplUokk0mKxSLxeJxGo4GiKJimieM4JBIJVFVFCEE+nyeVSvHhhx/y+OOP43keiUQCIQTn
      zp3j+vXrJBIJTNMEoLu7m8ceewyA8fFxrly5wquvvkqxWCQUCnH69GlGR0fRNA3P81BVlUAg
      gKIoCCFYX1+nra0NVVXJZDLE43Ecx6HRaNDa2sra2hpTU1McOXKEP//zPycQCPDd737XF4DP
      /RkeHuaDDz4A4PXXX+fSpUscOXKEWCyG4zicOnUKgO9///ucPHmStrY2enp6WF5e5uTJk+zd
      u5dgMMgnn3zCqVOn+IM/+ANUVcVxHKSUGIZBpVLBtm0CgcDmeefn54lEIpw4cQIpJUIIrl+/
      TmtrK/V6nWw2S7VaJZFI0NraSjwe54033mDPnj288MIL/PjHPyYUChEMBtF1nY6ODjRNo16v
      A+A4zqZIfRPI577ous7KygpdXV1Eo1FeeeUV2tvb2b9/P5qm0d/fzyuvvMKnn37Kzp07MU2T
      8+fPI4Tg8OHDPP7440gpWV9fp6Ojg2KxuNn4hoeHcRwHXdfp6ekhn88DYNs2i4uLWJaFpmns
      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
      uvY/8Dmh/K45tb4AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
